[{"title":"记录：从零开始 搭建属于自己的blog","url":"/2022/05/16/create_blog/","content":"<p><img src=\"/images/create_blog/myblog001.png\" alt=\"图片001\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>为什么要自己搭建博客?<br>你看技术大神们哪个没有自己的优秀博客<br>通过做笔记的方式对学习历程进行记录，对所学的知识形成⽂章也是对⾃⼰的交代<br>不懂技术的小伙伴也可以在自己的小天地写文，很爽又很有逼格是不是~</p>\n<span id=\"more\"></span>\n<p>用知乎、CSDN、博客园、简书等站点进行写作不行吗？<br>当然没问题啊，但是自行建站，一切都可以自己定制，毫无限制，你的地盘你做主<br>拥有属于自己的独立博客   自由，自在~<br>可以看看这篇文章：<a href=\"http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/\">刘未鹏 | Mind Hacks</a><br>更多请看 <a href=\"https://www.zhihu.com/question/19916345\">为什么要自建博客</a>？</p>\n<p>本站是通过Github托管+Hexo博客框架+Next主题搭建而来的<br>GitHub：一个静态站点托管服务+提供.github.io免费域名<br>Hexo：一个高效的博客框架<br>NexT：一个简约风格的网站主题</p>\n<p>Github+hexo搭建个人博客的相关的教程网上有很多，但每位技术大神都写的不太一样(还有受不同环境或版本的影响…)，所以我决定将我搭建的首个博客过程写下来记录一下，包括我亲身踩过的一些坑orz…希望给和我一样的技术小白提供一些帮助。<br>最后，感谢互联网中提供帮助的各路大神。</p>\n<hr>\n<h1 id=\"搭建步骤概览\"><a href=\"#搭建步骤概览\" class=\"headerlink\" title=\"搭建步骤概览\"></a>搭建步骤概览</h1><ol>\n<li>第一部分 Github的安装及相关配置 <ul>\n<li>注册Github账号</li>\n<li>创建Repository #仓库</li>\n<li>安装Git</li>\n<li>将Git与GitHub账号绑定</li>\n</ul>\n</li>\n<li>第二部分 搭建Hexo博客 安装及相关配置<ul>\n<li>安装Node.js #依赖环境</li>\n<li>安装Hexo框架</li>\n<li>将博客部署到github.io #发布网站</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h1 id=\"Github的安装及相关配置\"><a href=\"#Github的安装及相关配置\" class=\"headerlink\" title=\"Github的安装及相关配置\"></a>Github的安装及相关配置</h1><h2 id=\"注册Github账号\"><a href=\"#注册Github账号\" class=\"headerlink\" title=\"注册Github账号\"></a>注册Github账号</h2><p>由于网站是托管在Github上的，所以首先需要创建Github的账户<br>访问<a href=\"/https://github.com/\">Github官网</a> 右上角<code>Sign up</code>开始创建</p>\n<h2 id=\"创建Repository-仓库\"><a href=\"#创建Repository-仓库\" class=\"headerlink\" title=\"创建Repository #仓库\"></a>创建Repository #仓库</h2><p>注册好Github账户后，继续创建用于托管网站的仓库，按目前的Github网页排版可点击<br><code>New</code>、<code>Start a project</code>、<code>New repository</code>这三个位置进行仓库的创建<br><img src=\"/images/create_blog/myblog1.png\" alt=\"图1\"><br>Repository 仓库名字的格式应该是 <code>username.github.io</code> 也就是你创建好博客后的域名<br>其中username保持与注册用户名一致<br>例如我的username是mysterious-X 仓库名则为<code>mysterious-X.github.io</code><br><img src=\"/images/create_blog/myblog2.png\" alt=\"图2\"><br>其余选项可以按需，博主是全部保持的默认，<br>最后下拉到底，点击<code>Creat repository</code>完成仓库创建</p>\n<h2 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h2><p>Git是什么？参照廖雪峰老师博客中的说法，Git是目前 主流的、开源的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。更多详细介绍可移步至此 <a href=\"https://www.liaoxuefeng.com/wiki/896043488029600/896202815778784\">Git的诞生</a><br>最简单的理解就是网站在本地搭建好后，需要使用Git同步到GitHub上进行托管及上线<br>很多博主在搭建时都推荐了<a href=\"https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496\">廖雪峰老师的Git教程</a> 其中包括了linux、Mac OS、Windows的安装教程。<br>本站是通过windows系统搭建的，但无奈廖老师windows部分的教程选择的是默认安装…<br>而我又对众多的选项非常好奇，本着求知欲，所以又多找了几份关于Windows系统的，带图带翻译和详细步骤讲解的安装教程，可以对比着看看。<br><a href=\"https://blog.csdn.net/mukes/article/details/115693833\">Git 详细安装教程1</a><br><a href=\"https://blog.csdn.net/weixin_44486583/article/details/122704375\">Git 详细安装教程2</a><br>Git官方windows版下载传送门→<a href=\"https://git-scm.com/download/win\">Git Download for Windows</a> </p>\n<h2 id=\"将Git与GitHub帐号绑定\"><a href=\"#将Git与GitHub帐号绑定\" class=\"headerlink\" title=\"将Git与GitHub帐号绑定\"></a>将Git与GitHub帐号绑定</h2><p>Git安装完成后在桌面任意位置右键菜单点击<code>Git Bash here</code>或者在菜单里搜索<code>Git Bash</code>并打开<br>设置user.name和user.email配置信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global user.name GitHub用户名</span><br></pre></td></tr></table></figure>\n<p>#输入你实际的github注册用户名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global user.email GitHub注册邮箱</span><br></pre></td></tr></table></figure>\n<p>#输入你实际的github注册邮箱</p>\n<p>生成SSH Key 密钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C GitHub注册邮箱</span><br></pre></td></tr></table></figure>\n<p>#输入你实际的github注册邮箱</p>\n<p>然后直接一键三连(三次回车)，默认不需要设置密码<br>最后看到这样的界面，就成功生成ssh key了<br><img src=\"/images/create_blog/myblog3.png\" alt=\"图3\"></p>\n<h3 id=\"配置-SSH-key-密钥\"><a href=\"#配置-SSH-key-密钥\" class=\"headerlink\" title=\"配置 SSH key 密钥\"></a>配置 SSH key 密钥</h3><p>配置 SSH key 用来将本地git项目与github联系<br>找到生成 .ssh 密钥的文件夹(如上图中标记位置查看自己的，每个人的路径都不一样)，<br>将文件夹内名为<code>id_rsa.pub</code>的密钥内的全部内容复制，<br>#没找到的勾选一下文件扩展名 隐藏的项目<br>复制完后打开<a href=\"https://github.com/settings/keys\">GitHub_Settings_keys</a>页面，<br>#如链接失效，也可在github上点右上角头像下拉菜单 -&gt; 点击Settings -&gt; 左侧列表中点开SSH and GPG keys -&gt; 点击<code>New SSH key</code><br><img src=\"/images/create_blog/myblog4.png\" alt=\"图4\"><br><img src=\"/images/create_blog/myblog5.png\" alt=\"图5\"><br>Title：可以任意填写，我写的是myBlog<br>Key：将刚刚复制的<code>id_rsa.pub</code>密钥内容粘贴至此<br>点击<code>Add SSH key</code>完成<br>最后在Git Bash中检测GitHub公钥设置是否成功，<br>输入以下代码 不要改任何一个字 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh git@github.com</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/create_blog/myblog6.png\" alt=\"图6\"><br>如上则说明本机已成功连接到Github。<br>这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p>\n<h1 id=\"搭建Hexo博客-安装及相关配置\"><a href=\"#搭建Hexo博客-安装及相关配置\" class=\"headerlink\" title=\"搭建Hexo博客 安装及相关配置\"></a>搭建Hexo博客 安装及相关配置</h1><h2 id=\"安装Node-js-依赖环境\"><a href=\"#安装Node-js-依赖环境\" class=\"headerlink\" title=\"安装Node.js #依赖环境\"></a>安装Node.js #依赖环境</h2><p><code>Hexo</code>基于Node.js，会包含环境变量及npm的安装，下载<a href=\"https://link.zhihu.com/?target=https://nodejs.org/en/download/\">Node.js</a> 安装包并安装<br>安装后检测Node.js及npm是否安装成功，在命令行中输入 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/create_blog/myblog7.png\" alt=\"图7\"><br>如返回值如上，则Hexo的环境已全部搭建完毕。</p>\n<h2 id=\"安装Hexo框架\"><a href=\"#安装Hexo框架\" class=\"headerlink\" title=\"安装Hexo框架\"></a>安装Hexo框架</h2><p>环境准备好后，开始安装Hexo<br><code>Hexo</code>是个人博客网站的框架， 首先需要在自己的电脑里创建一个文件夹，例如<code>D:\\myblog\\mysterious-X.github.io\\</code><br>Hexo框架与以后你自己发布的网页都在这个文件夹中<br>此文件夹的名字博主是填写的自己的Repository仓库名</p>\n<p>#博主在之后访问搭建好的页面时，遇到了github.io页面404报错<br>重新搭建了环境并使 Github用户名、Repository仓库名、本地文件夹名 保持一致后解决的<br>所以如果是跟博主一样的新手的话，第一次搭建时可以保守起见，<br>将Github用户名、Repository仓库名、本地文件夹名  保持一致<br>相关资料可参考：<br><a href=\"https://blog.csdn.net/dajian790626/article/details/78595684\">https://blog.csdn.net/dajian790626/article/details/78595684</a><br><a href=\"http://www.jianshu.com/p/380290deb8f0\">http://www.jianshu.com/p/380290deb8f0</a></p>\n<p>创建好后，直接在该文件夹上右击<code>Git Bash Here</code><br>或进入文件夹内，空白地方右击鼠标点击<code>Git Bash Here</code><br><strong>提示</strong>：在进行博客搭建或之后进行优化修改工作时，每次使用命令都要在<code>此目录</code>下进行。<br>使用npm命令安装Hexo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli </span><br></pre></td></tr></table></figure>\n<p>安装完成后，初始化博客</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br></pre></td></tr></table></figure>\n<p>现在已经搭建好本地的 Hexo 博客了，为了检测我们的网站雏形<br>分别按顺序输入以下三条命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new test_my_site</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作。<br>完成后，打开浏览器输入地址：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">localhost:4000</span><br></pre></td></tr></table></figure>\n<p>这样我们就可以看到已经搭建好本地的博客了</p>\n<p><em><strong>常用的Hexo 命令</strong></em><br>hexo init              #初始化博客<br>hexo n 文章标题 #新建文章          hexo new 的简写<br>hexo g                #生成                 hexo generate 的简写<br>hexo s                #启动服务预览   hexo server 的简写<br>hexo d                #部署                 hexo deploy 的简写<br>hexo clean         #清除缓存，若网页正常情况下可忽略这条命令<br>之后每次修改配置文件或新建文章后都需要重新生成一下和部署到github上</p>\n<h2 id=\"将博客部署到github-io-发布网站\"><a href=\"#将博客部署到github-io-发布网站\" class=\"headerlink\" title=\"将博客部署到github.io #发布网站\"></a>将博客部署到github.io #发布网站</h2><p>上步中已经完成了站点的本地预览，接下来要做的就是将网站进行发布，这样可以让更多的人阅读到<br>在hexo框架中最主要的配置文件<code>_config.yml</code>也被称之为站点配置文件，<br>之后的一些站点配置和优化都会用到此文件。<br><img src=\"/images/create_blog/myblog8.png\" alt=\"图8\"><br>编辑站点配置文件，可以使用<code>nodepad++</code>打开<br>翻到末尾，找到deploy开头的地方，进行如下修改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\"><span class=\"built_in\">type</span>: git</span><br><span class=\"line\">repo: 这里填入你之前在GitHub上创建仓库的SSH</span><br><span class=\"line\">branch: master</span><br></pre></td></tr></table></figure>\n<p>repo的地址：进入 Github 个人主页中，点右上角头像中的<code>Repositories</code>，点进之前新建的项目中，点击<code>code</code>，复制新建的独立博客项目的 <code>SSH</code> 码，复制粘贴至站点文件<code>repo:</code> 的后面<br><strong>一定要注意语法，要用英文符号的<code>：</code>，所有的<code> ：</code> 后面必须加一个<code>空格</code>，不然会报错。</strong><br><img src=\"/images/create_blog/myblog9.png\" alt=\"图9\"><br><img src=\"/images/create_blog/myblog10.png\" alt=\"图10\"><br>修改完后保存退出。</p>\n<p>最后安装Git部署插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>此步是为了给hexo d·这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置<br>安装完成后依次输入以下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo g </span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 <a href=\"http://xxxx.github.io/\">http://xxxx.github.io</a><br>比如我的xxxx就是我的GitHub用户名: <a href=\"https://mysterious-x.github.io/\">mysterious-x.github.io</a><br>如果你发现你的博客与博主一样已经上线了，可以在网络上被访问到了。<br>那么….<br>           <em><strong>恭喜你~！你的博客已经搭建好啦！</strong></em></p>\n<p>至此，我的首个博客基础搭建部分就算完毕了，后续只需要通过一些简单的Markdown语法就可以快速生成一篇博客了。</p>\n<p>附：<br><em><strong>初识Markdown语法</strong></em><br>Markdown也是现在各博客平台比较主流的编辑语法，入门只要3-5分钟。<br>教程也是网上一抓一大把，在此我推荐几篇我个人认为比较简洁明了的，非常之好上手。<br>传送门1~  -&gt;  <a href=\"https://www.jianshu.com/p/191d1e21f7ed\">简书-Markdown基本语法</a><br>传送门2~  -&gt;  <a href=\"https://www.runoob.com/markdown/md-tutorial.html\">菜鸟教程-Markdown 教程</a><br>传送门3~  -&gt;  <a href=\"https://blog.csdn.net/afei__/article/details/80717153\">CSDN-Markdown语法介绍</a></p>\n<p>后续会对博客进行更多个性化的功能定制~<br>继续打造独一无二且只属于你的个性化博客~<br>详参下篇！~</p>\n<p><strong>参考文献</strong><br><a href=\"https://zhuanlan.zhihu.com/p/32957389\">技术小白搭建个人博客 github+hexo</a><br><a href=\"https://zhuanlan.zhihu.com/p/26625249\">GitHub+Hexo 搭建个人网站详细教程</a><br><a href=\"https://www.liaoxuefeng.com/wiki/896043488029600\">史上最浅显易懂的Git教程！</a></p>\n","categories":["Github","Hexo","Blog"],"tags":["博客搭建","学习笔记"]},{"title":"win10安装vm tools报错","url":"/2022/05/31/20220531vmtools/","content":"<p>在搭建win10环境时遇到的问题日常记录一下</p>\n<p>创建好虚拟机后win10无法安装vm tools，报错：安装程序无法自动安装，VMCI驱动程序，必须手动安装此驱动程序。<br>首先尝试了把vm从15.5卸载重装为了16没有解决。<br>网上看了很多方案都是说win7的</p>\n<blockquote>\n<p>微软更新了驱动程序的签名算法，从 2019 年初开始，逐步弃用SHA-1，改为SHA-2。<br>百度了下推测新版的VMCI驱动用的是SHA-2签名，而win7不支持SHA-2签名，所以出现了这个问题。不过，可以通过安装KB4474419和KB4490628补丁来解决这个问题。</p>\n</blockquote>\n<p>但以上两个补丁好像并不适用于win10，尝试给win10打了些默认扫出来的补丁，都打好了后还是无法安装vm tools。<br>终于在<a href=\"https://blog.csdn.net/wuqing0811/article/details/124402618%E6%90%9C%E7%B4%A2%E5%88%B0%E4%BA%86%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%EF%BC%8C\">https://blog.csdn.net/wuqing0811/article/details/124402618搜索到了解决方案，</a><br>此博主也是网上搜了好多方法不好使，最终下载一个最新的vmTool安装包，解决了。<br>安装包地址：<a href=\"http://soft.onlinedown.net/soft/984054.htm\">http://soft.onlinedown.net/soft/984054.htm</a><br>下载后，直接在虚拟机里解压缩安装就可以正常安装了。</p>\n","categories":["win10","VMware","vm tools"],"tags":["学习笔记","排错记录"]},{"title":"test","url":"/2022/05/30/test/","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"Ooops, 你输入了错误的密码，请检查后重试.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"3a2f676da8749fb7104a77a02c45981c0c1f518c794fd65830e04d77e518aed7\">bd25ed9264b080267271e137e33d0ce11d9bfff904e8682f8b9af4f5fbb51415be83aa14f629002e17bf9a801f90455dc3e95b12dd99f12c39aeeca786d7f37c</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">您好, 这里是 1 级加密文章，不对公众开放，请理解。</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">"},{"title":"nexT主题 - 版本升级及优化","url":"/2022/05/26/optimization-blog-2/","content":"<p>emm…由于对某些next5.1.4当中没有实现的功能存有执念…，于是便有了此篇文章……</p>\n<span id=\"more\"></span>\n<p>将next 5.1.4 版本尝试升级到了next 7.x的版本<br>升级后部分优化项与之前的5.1.4的设置并不完全通用。<br>以下将对有区别的项及如何在7.x中修改进行功能的实现进行记录</p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>多数配置是可以直接从旧主题配置 _config.yml中复制过来的，<br>可以同时将新旧配置文件打开对照着看，结合翻译，可更加快速准确的理解各项设置。</p>\n<h1 id=\"升级next-7-x\"><a href=\"#升级next-7-x\" class=\"headerlink\" title=\"升级next 7.x\"></a>升级next 7.x</h1><p>升级的话我是参考的这两篇文章<br><a href=\"https://github.com/theme-next/hexo-theme-next/blob/master/docs/UPDATE-FROM-5.1.X.md\">https://github.com/theme-next/hexo-theme-next/blob/master/docs/UPDATE-FROM-5.1.X.md</a><br><a href=\"https://zhuanlan.zhihu.com/p/163830894\">https://zhuanlan.zhihu.com/p/163830894</a><br>我分别实验了两个，分别是7.7.2和7.8.0<br>7.7.2地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/theme-next/hexo-theme-next themes/next-reloaded</span><br></pre></td></tr></table></figure>\n<p>7.8.0地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/gonghs/hexo-theme-next themes/next7.8.0</span><br></pre></td></tr></table></figure>\n<p>感觉没啥区别，最终用的7.8.0<br>修改站点配置文件为新主题</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">theme: next7.8.0</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>附：NEXT主题历年的Github存储源<br>2014- 2017年<br><a href=\"https://github.com/iissnan/hexo-theme-next\">https://github.com/iissnan/hexo-theme-next</a><br>2018-2019<br><a href=\"https://github.com/theme-next/hexo-theme-next\">https://github.com/theme-next/hexo-theme-next</a><br>2020年<br><a href=\"https://github.com/next-theme/hexo-theme-next\">https://github.com/next-theme/hexo-theme-next</a></p>\n</blockquote>\n<p>安装之前一定注意将之前的主题目录进行备份，或将整个站点目录进行备份。俗话说得好，有备无患，这样才能放开手脚大胆尝试，万一改着改着..干崩了….还可以随时回复到原样，不影响使用。<br>新的主题储存位置不要与原next目录重叠，上面两条git连接已经分别指定到了next-reloadad目录和next7.8.0目录。<br>正常情况是可以随时在站点配置文件中进行主题切换的，万一没改好崩了就从备份覆盖恢复吧。</p>\n<h1 id=\"语言问题\"><a href=\"#语言问题\" class=\"headerlink\" title=\"语言问题\"></a>语言问题</h1><p>由于官方将中文的语言命名由zh-Hans改为了zh-CN，因此要将hexo配置文件中的语言进行对应修改。<br>打开站点配置文件进行修改</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">language: zh-CN</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"文章预览-x2F-阅读全文\"><a href=\"#文章预览-x2F-阅读全文\" class=\"headerlink\" title=\"文章预览&#x2F;阅读全文\"></a>文章预览&#x2F;阅读全文</h1><p>文章预览部分由于next7.x将部分依赖插件移除了<br>首先需要安装自动摘录生成器插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-excerpt --save</span><br></pre></td></tr></table></figure>\n<p>打开主题配置文件 定位到excerpt_description，修改以下两项为true</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Automatically excerpt description in homepage as preamble text.  自动摘要</span><br><span class=\"line\">excerpt_description: true</span><br><span class=\"line\"># Read more button</span><br><span class=\"line\"># If true, the read more button will be displayed in excerpt section. 显示阅读全文按钮</span><br><span class=\"line\">read_more_btn: true</span><br></pre></td></tr></table></figure>\n<p>比较不好的一点是这个只能自动读取摘要 非常之不智能！！！ 读取的摘要狠多 ！！！<br>推荐之后编写文章时自己设置摘要<br>若想保留了样式并且自行选择显示哪些内容来预览。就可以在写md博文时，在想要显示预览的部分后加上<code>&lt;!--more--&gt;</code>，这样这样首页和列表页展示的文章内容就是<code>&lt;!--more--&gt;</code>之前的文字，而之后的就不会显示了，同时也保留文章原样式。</p>\n<p>然后如果觉得自动摘录的过多想自定义摘录数量的话<br>打开站点配置文件，添加以下行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">excerpt:</span><br><span class=\"line\">  depth: 3  </span><br><span class=\"line\">  excerpt_excludes: []</span><br><span class=\"line\">  more_excludes: []</span><br><span class=\"line\">  hideWholePostExcerpts: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>其中<code>depth</code>的数值是摘录多少行的意思，<br>与5.14相比，摘录的方式由原来的摘录指定<code>字数</code>，变为了<code>行数</code>。</p>\n<h1 id=\"个人名称及简介\"><a href=\"#个人名称及简介\" class=\"headerlink\" title=\"个人名称及简介\"></a>个人名称及简介</h1><p>个人头像下的作者名称和简介不用单独在主题配置文件中添加 author、description 选项了，<br>可以直接从站点配置文件中进行调用。</p>\n<h1 id=\"字数统计异常\"><a href=\"#字数统计异常\" class=\"headerlink\" title=\"字数统计异常\"></a>字数统计异常</h1><p>在旧版本中的post_wordcount配置似乎已经不可用，因此需要使用symbols_count_time替代。<br>此插件与next5.x相比，不用再单独配置全站总字数了，可以一次性设置统计单篇文章字数及站点全部文章的总字数。<br>卸载原有依赖及安装新插件， 不卸载对新插件会有影响</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-wordcount</span><br><span class=\"line\">npm i hexo-symbols-count-time</span><br></pre></td></tr></table></figure>\n<p>打开主题配置文件，定位到symbols_count_time下开启相关功能：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">symbols_count_time:</span><br><span class=\"line\">  <span class=\"comment\"># 换行显示字数统计和阅读市场</span></span><br><span class=\"line\">  separated_meta: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># 文章底部显示</span></span><br><span class=\"line\">  item_text_post: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># 博客底部显示 默认为false</span></span><br><span class=\"line\">  item_text_total: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>在站点配置文件内还可以设置显示哪些内容和一些统计维度：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">symbols_count_time:</span><br><span class=\"line\">  <span class=\"comment\"># 文章字数</span></span><br><span class=\"line\">  symbols: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># 阅读时长</span></span><br><span class=\"line\">  time: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># 总文章字数</span></span><br><span class=\"line\">  total_symbols: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># 阅读总时长</span></span><br><span class=\"line\">  total_time: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># 是否排除代码统计</span></span><br><span class=\"line\">  exclude_codeblock: <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"站点访问量统计\"><a href=\"#站点访问量统计\" class=\"headerlink\" title=\"站点访问量统计\"></a>站点访问量统计</h1><h1 id=\"添加动态背景\"><a href=\"#添加动态背景\" class=\"headerlink\" title=\"添加动态背景\"></a>添加动态背景</h1><p>next 7.x的动态背景与5.x有些区别，默认自带的移除了<code>canvas_nest</code>，增加了一个<code>彩带</code>的<br>并且默认状态是移除插件，需要那个效果需要单独手动安装。<br>打开主题配置文件定位到以下段落，会看到有两大块已经预设好的动态背景，默认都是flse，此时修改为true是不会生效的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">three:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">  three_waves: <span class=\"literal\">false</span></span><br><span class=\"line\">  canvas_lines: <span class=\"literal\">true</span></span><br><span class=\"line\">  canvas_sphere: <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Canvas-ribbon</span></span><br><span class=\"line\"><span class=\"comment\"># Dependencies: https://github.com/theme-next/theme-next-canvas-ribbon</span></span><br><span class=\"line\"><span class=\"comment\"># For more information: https://github.com/zproo/canvas-ribbon</span></span><br><span class=\"line\">canvas_ribbon:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  size: 300 <span class=\"comment\"># The width of the ribbon</span></span><br><span class=\"line\">  alpha: 0.6 <span class=\"comment\"># The transparency of the ribbon</span></span><br><span class=\"line\">  zIndex: -1 <span class=\"comment\"># The display level of the ribbon</span></span><br></pre></td></tr></table></figure>\n<p>想实现<code>three</code>的动态效果安装以下插件<br>在themes&#x2F;next7.X 目录内打开Git bash，然后开始安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/theme-next/theme-next-three <span class=\"built_in\">source</span>/lib/three</span><br></pre></td></tr></table></figure>\n<p>想实现<code>canvas_ribbon</code>动态效果的安装以下插件<br>在themes&#x2F;next7.X 目录内打开Git bash，然后开始安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/theme-next/theme-next-canvas-ribbon <span class=\"built_in\">source</span>/lib/canvas-ribbon</span><br></pre></td></tr></table></figure>\n<p>安装完成相应的插件后，只需返回主题配置文件将相关的功能设置为 true 开启状态即可。<br>hexo s 本地预览。</p>\n<p><strong>后续</strong><br>偶然间看到一篇文章提到了canvas_nest插件，我又给装回来了<br>想实现<code>three</code>的动态效果安装以下插件<br>在themes&#x2F;next7.X 目录内打开Git bash，然后开始安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/theme-next/theme-next-canvas-nest <span class=\"built_in\">source</span>/lib/canvas-nest</span><br></pre></td></tr></table></figure>\n<p>打开主题配置文件添加以下内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">canvas_nest:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  onmobile: <span class=\"literal\">true</span> <span class=\"comment\"># display on mobile or not</span></span><br><span class=\"line\">  color: <span class=\"string\">&#x27;0,0,255&#x27;</span> <span class=\"comment\"># RGB values, use &#x27;,&#x27; to separate</span></span><br><span class=\"line\">  opacity: 0.5 <span class=\"comment\"># the opacity of line: 0~1</span></span><br><span class=\"line\">  zIndex: -1 <span class=\"comment\"># z-index property of the background</span></span><br><span class=\"line\">  count: 99 <span class=\"comment\"># the number of lines</span></span><br></pre></td></tr></table></figure>\n<p>在next主题目录&#x2F;source&#x2F;lib&#x2F;canvas-nest中打开Git bash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<p>最后常规操作重新生成一下，嘿嘿，熟悉的<code>canvas_nest</code>效果又回来了<br>感谢作者：<a href=\"https://himmy.blog.csdn.net/article/details/95000707?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1-95000707-blog-104691631.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1-95000707-blog-104691631.pc_relevant_default&amp;utm_relevant_index=2\">https://himmy.blog.csdn.net/article/details/95000707?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-95000707-blog-104691631.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-95000707-blog-104691631.pc_relevant_default&amp;utm_relevant_index=2</a></p>\n<h1 id=\"底部栏小心心\"><a href=\"#底部栏小心心\" class=\"headerlink\" title=\"底部栏小心心\"></a>底部栏小心心</h1><p>next 7.x的底部栏默认自带的，红心可以跳动了<br>修改主题配置文件定位到<code>Icon</code>进行如下修改</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Icon between year and copyright info.</span></span><br><span class=\"line\">icon:</span><br><span class=\"line\">  <span class=\"comment\"># Icon name in Font Awesome. See: https://fontawesome.com/icons</span></span><br><span class=\"line\">  name: fa fa-heart   <span class=\"comment\">#心型图标</span></span><br><span class=\"line\">  <span class=\"comment\"># If you want to animate the icon, set it to true.</span></span><br><span class=\"line\">  animated: <span class=\"literal\">true</span>      <span class=\"comment\">#是否开启跳动动画   </span></span><br><span class=\"line\">  <span class=\"comment\"># Change the color of icon, using Hex Code.</span></span><br><span class=\"line\">  color: <span class=\"string\">&quot;#ff0000&quot;</span>    <span class=\"comment\">#默认颜色 红</span></span><br></pre></td></tr></table></figure>\n<p>然后如果想要换图标的话配置文件内的网址我试了不太好使<br><a href=\"https://fontawesome.com/icons\">https://fontawesome.com/icons</a><br>可以参考这个网址 我是将<code>fa fa-heart</code>换为了<code>fa fa-heartbeat</code><br><a href=\"https://www.thinkcmf.com/font/search/index.html\">https://www.thinkcmf.com/font/search/index.html</a></p>\n<h1 id=\"修改文章底部的-号标签\"><a href=\"#修改文章底部的-号标签\" class=\"headerlink\" title=\"修改文章底部的#号标签\"></a>修改文章底部的#号标签</h1><p>文章底部标签前的#好修改为标签符号，在7.x主题中已经内置好了，正常是只需要到主题配置文件中定位到<code>tag_icon</code>修改为<code>true</code>即可，不需要修改其他地方<br>如果修改true后未生效可继续参考以下配置。<br>在next主题目录&#x2F;layout&#x2F;_macro&#x2F;找到post.swig文件，搜索 <code>rel=&quot;tag&quot;&gt;#</code><br>此处通过对比之前的主题的post.swig文件的此处，可以发现，在<code>&lt;div class=&quot;post-tags&quot;&gt;</code>的前面加入了一段<code>if</code>判断的语句，让<code>rel=&quot;tag&quot;&gt;</code>去找<code>tag_indicate</code>获取参数，并且默认已经将<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code>写入在内了,如果不生效一直被判断结果为 # 号的话。<br>可以通过以下两种方式实现，<br>第一个方法简单粗暴，直接将此 if 判断段落删除，(全部 #号注释掉或直接删除此段)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#          &#123;%- if theme.tag_icon %&#125;</span></span><br><span class=\"line\"><span class=\"comment\">#            &#123;%- set tag_indicate = &#x27;&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;&#x27; %&#125;</span></span><br><span class=\"line\"><span class=\"comment\">#          &#123;% else %&#125;</span></span><br><span class=\"line\"><span class=\"comment\">#            &#123;%- set tag_indicate = &#x27;#&#x27; %&#125;</span></span><br><span class=\"line\"><span class=\"comment\">#          &#123;%- endif %&#125;</span></span><br></pre></td></tr></table></figure>\n<p>然后将<code>rel=&quot;tag&quot;&gt;&#123;&#123; tag_indicate &#125;&#125;</code>修改为<code>rel=&quot;tag&quot;&gt;&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code> 也就是与之前的配置文件基本上相同了。</p>\n<p>第二种方式是将 if 判断内的 else 值修改为与 if 值 一样。((<em>&#x2F;ω＼</em>))</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;%- <span class=\"keyword\">if</span> theme.tag_icon %&#125;</span><br><span class=\"line\">  &#123;%- <span class=\"built_in\">set</span> tag_indicate = <span class=\"string\">&#x27;&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;&#x27;</span> %&#125;</span><br><span class=\"line\">&#123;% <span class=\"keyword\">else</span> %&#125;</span><br><span class=\"line\">  &#123;%- <span class=\"built_in\">set</span> tag_indicate = <span class=\"string\">&#x27;&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;&#x27;</span> %&#125;</span><br><span class=\"line\">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>三种方式均可以实现，任君挑选。</p>\n<h1 id=\"鼠标点击特效\"><a href=\"#鼠标点击特效\" class=\"headerlink\" title=\"鼠标点击特效\"></a>鼠标点击特效</h1><p>通过对比后发现next7.x取消了_custom&#x2F;custom.swig，也就是说旧版的&#x2F;layout&#x2F;_layout.swig中配置的调用custom.swig配置失效了。<br>在主题目录&#x2F;js&#x2F;内 创建cursor目录，将之前的四个特效文件可以直接拖到新的cursor目录内继续使用<br><strong>新的设置</strong><br>可以通过查看主题配置文件custom_file_path:处，确认调用的是source&#x2F;_data&#x2F;body-end.swig文件<br>此处注意！调用的swig文件的内容其实是没有发生任何变化的，只是位置不同了，<br>之前调用的是<code>主题目录内的``custom.swig</code><br>新的调用<code>body-end.swig</code>是从<code>站点目录</code>&#x2F;source&#x2F;_data&#x2F;内进行的调用！<br>打开站点目录&#x2F;source&#x2F;_data&#x2F; 创建body-end.swig文件，(默认应该是没有body-end.swig的,包括_data目录)<br>在body-end.swig中添加以下代码：（也可将原来的custom.swig直接改个名拖过来）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"comment\"># 鼠标点击特效 #&#125;</span></span><br><span class=\"line\">&#123;% <span class=\"keyword\">if</span> theme.cursor_effect == <span class=\"string\">&quot;fireworks&quot;</span> %&#125;</span><br><span class=\"line\">  &lt;script async src=<span class=\"string\">&quot;/js/fireworks.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&#123;% elseif theme.cursor_effect == <span class=\"string\">&quot;explosion&quot;</span> %&#125;</span><br><span class=\"line\">  &lt;canvas class=<span class=\"string\">&quot;fireworks&quot;</span> style=<span class=\"string\">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;&lt;/canvas&gt;</span><br><span class=\"line\">  &lt;script src=<span class=\"string\">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">  &lt;script async src=<span class=\"string\">&quot;/js/explosion.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&#123;% elseif theme.cursor_effect == <span class=\"string\">&quot;love&quot;</span> %&#125;</span><br><span class=\"line\">  &lt;script async src=<span class=\"string\">&quot;/js/love.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&#123;% elseif theme.cursor_effect == <span class=\"string\">&quot;text&quot;</span> %&#125;</span><br><span class=\"line\">  &lt;script async src=<span class=\"string\">&quot;/js/text.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在主题配置文件中删除<code>body-end.swig</code>行的<code>#</code>号注释：(新的内容)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">custom_file_path:</span><br><span class=\"line\">... ...</span><br><span class=\"line\">bodyEnd: source/_data/body-end.swig</span><br><span class=\"line\">... ...</span><br></pre></td></tr></table></figure>\n<p>最后在主题配置文件中添加如下配置项：(此步与之前一致)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 鼠标点击特效</span></span><br><span class=\"line\"><span class=\"comment\"># mouse click effect: fireworks | explosion | love | text</span></span><br><span class=\"line\">cursor_effect: love</span><br></pre></td></tr></table></figure>\n<p>最后，点击效果的小心心又回来啦~</p>\n<h1 id=\"canvas-粒子时钟\"><a href=\"#canvas-粒子时钟\" class=\"headerlink\" title=\"canvas 粒子时钟\"></a>canvas 粒子时钟</h1><p>在优化其他项时意外发现了一个有意思的功能<a href=\"https://tding.top/archives/2bd6d82.html\">https://tding.top/archives/2bd6d82.html</a></p>\n<p>首先在站点目录&#x2F;source&#x2F;_data&#x2F; 创建clock.swig文件 粘贴以下代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% macro render(display_toc) %&#125;</span><br><span class=\"line\">  &lt;div class=<span class=\"string\">&quot;toggle sidebar-toggle&quot;</span>&gt;</span><br><span class=\"line\">    &lt;span class=<span class=\"string\">&quot;toggle-line toggle-line-first&quot;</span>&gt;&lt;/span&gt;</span><br><span class=\"line\">    &lt;span class=<span class=\"string\">&quot;toggle-line toggle-line-middle&quot;</span>&gt;&lt;/span&gt;</span><br><span class=\"line\">    &lt;span class=<span class=\"string\">&quot;toggle-line toggle-line-last&quot;</span>&gt;&lt;/span&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;aside class=<span class=\"string\">&quot;sidebar&quot;</span>&gt;</span><br><span class=\"line\">    &lt;div class=<span class=\"string\">&quot;sidebar-inner&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#123;%- <span class=\"built_in\">set</span> display_toc = page.toc.enable and display_toc %&#125;</span><br><span class=\"line\">      &#123;%- <span class=\"keyword\">if</span> display_toc %&#125;</span><br><span class=\"line\">        &#123;%- <span class=\"built_in\">set</span> toc = toc(page.content, &#123; class: <span class=\"string\">&quot;nav&quot;</span>, list_number: page.toc.number, max_depth: page.toc.max_depth &#125;) %&#125;</span><br><span class=\"line\">        &#123;%- <span class=\"built_in\">set</span> display_toc = toc.length &gt; 1 and display_toc %&#125;</span><br><span class=\"line\">      &#123;%- endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;ul class=<span class=\"string\">&quot;sidebar-nav motion-element&quot;</span>&gt;</span><br><span class=\"line\">        &lt;li class=<span class=\"string\">&quot;sidebar-nav-toc&quot;</span>&gt;</span><br><span class=\"line\">          &#123;&#123; __(<span class=\"string\">&#x27;sidebar.toc&#x27;</span>) &#125;&#125;</span><br><span class=\"line\">        &lt;/li&gt;</span><br><span class=\"line\">        &lt;li class=<span class=\"string\">&quot;sidebar-nav-overview&quot;</span>&gt;</span><br><span class=\"line\">          &#123;&#123; __(<span class=\"string\">&#x27;sidebar.overview&#x27;</span>) &#125;&#125;</span><br><span class=\"line\">        &lt;/li&gt;</span><br><span class=\"line\">      &lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;!--noindex--&gt;</span><br><span class=\"line\">      &lt;div class=<span class=\"string\">&quot;post-toc-wrap sidebar-panel&quot;</span>&gt;</span><br><span class=\"line\">        &#123;%- <span class=\"keyword\">if</span> display_toc %&#125;</span><br><span class=\"line\">          &lt;div class=<span class=\"string\">&quot;post-toc motion-element&quot;</span>&gt;&#123;&#123; toc &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">        &#123;%- endif %&#125;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">      &lt;!--/noindex--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;div class=<span class=\"string\">&quot;site-overview-wrap sidebar-panel&quot;</span>&gt;</span><br><span class=\"line\">        &#123;&#123; partial(<span class=\"string\">&#x27;_partials/sidebar/site-overview.swig&#x27;</span>, &#123;&#125;, &#123;cache: theme.cache.enable&#125;) &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#123;&#123;- next_inject(<span class=\"string\">&#x27;sidebar&#x27;</span>) &#125;&#125;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#123;%- <span class=\"keyword\">if</span> theme.back2top.enable and theme.back2top.sidebar %&#125;</span><br><span class=\"line\">        &lt;div class=<span class=\"string\">&quot;back-to-top motion-element&quot;</span>&gt;</span><br><span class=\"line\">          &lt;i class=<span class=\"string\">&quot;fa fa-arrow-up&quot;</span>&gt;&lt;/i&gt;</span><br><span class=\"line\">          &lt;span&gt;0%&lt;/span&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">      &#123;%- endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/aside&gt;</span><br><span class=\"line\">  &lt;div <span class=\"built_in\">id</span>=<span class=\"string\">&quot;sidebar-dimmer&quot;</span>&gt;&lt;/div&gt;</span><br><span class=\"line\">&#123;% endmacro %&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后打开主题配置文件在<code>custom_file_path:</code>段将sidebar前的 # 号注释删除</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">custom_file_path:</span><br><span class=\"line\">略....</span><br><span class=\"line\">  sidebar: <span class=\"built_in\">source</span>/_data/sidebar.swig</span><br><span class=\"line\">略.....</span><br></pre></td></tr></table></figure>\n\n<p>最后在主题配置文件中添加如下配置项：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 侧栏粒子时钟</span></span><br><span class=\"line\">diy_time:</span><br><span class=\"line\">  runtime: <span class=\"literal\">true</span> </span><br><span class=\"line\">  clock: <span class=\"literal\">true</span> <span class=\"comment\"># 粒子时钟</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"一键复制代码功能\"><a href=\"#一键复制代码功能\" class=\"headerlink\" title=\"一键复制代码功能\"></a>一键复制代码功能</h1><p>next7.x集成了此功能，不用像5.x那么折腾了<br>只需要在主题配置文件中定位<code>copy_button:</code>设置为<code>true</code>即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">copy_button:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span>       <span class=\"comment\">#开关</span></span><br><span class=\"line\">  <span class=\"comment\"># Show text copy result.   #展示复制成功结果</span></span><br><span class=\"line\">  show_result: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: default | flat | mac  #风格样式</span></span><br><span class=\"line\">  style: mac</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"自定义配置文件\"><a href=\"#自定义配置文件\" class=\"headerlink\" title=\"自定义配置文件\"></a>自定义配置文件</h1><p>由于7.x没有了custom，在搜索如何修改代码块样式自定义的时候看到一篇文章，居然可以直接在7.x自定义配置文件，超级方便，一口气按照教程添加了好几个功能，好使。</p>\n<p>首先在主题目录&#x2F;source&#x2F;css&#x2F;内，创建<code>_other.styl</code>文件<br>然后再主题目录&#x2F;source&#x2F;css&#x2F;内，找到main.styl文件并打开，在末尾添加如下调用配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">//个人添加</span><br><span class=\"line\">@import <span class=\"string\">&quot;_other.styl&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>最后只需要将想实现的效果直接添加在<code>_other.styl</code>文件中就可以了<br>我在<code>_other.styl</code>中添加了如下功能，可以进行参考按需添加。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"> //背景图片  url内地址可替换成自己喜欢的图片链接或本地链接</span><br><span class=\"line\">body &#123;</span><br><span class=\"line\">     background:url(https://pic.heson10.com/img/image-20200712231958010.png);</span><br><span class=\"line\">     background-repeat: no-repeat;</span><br><span class=\"line\">     background-attachment:fixed;</span><br><span class=\"line\">     background-size: cover;</span><br><span class=\"line\">     background-position:50% 50%; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"> //博客内容透明化</span><br><span class=\"line\">//文章内容的透明度设置</span><br><span class=\"line\">.content-wrap &#123;</span><br><span class=\"line\">  opacity: 0.9;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//侧边框的透明度设置</span><br><span class=\"line\">.sidebar &#123;</span><br><span class=\"line\">  opacity: 0.9;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//菜单栏的透明度设置</span><br><span class=\"line\">.header-inner &#123;</span><br><span class=\"line\">  background: rgba(255,255,255,0.9);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//搜索框（local-search）的透明度设置</span><br><span class=\"line\">.popup &#123;</span><br><span class=\"line\">  opacity: 0.9;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//首页顶部留白</span><br><span class=\"line\">.container&#123;margin-top:10px;&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">//首页banner渐变色</span><br><span class=\"line\">.site-brand-container &#123;</span><br><span class=\"line\">    background: linear-gradient(200deg, <span class=\"comment\">#2e80a5, #0c0c0b);</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// ``代码块样式</span><br><span class=\"line\">//code &#123;</span><br><span class=\"line\">//    color: <span class=\"comment\">#E6006B;</span></span><br><span class=\"line\">//    background: white;</span><br><span class=\"line\">//    border-radius: 0.3em;</span><br><span class=\"line\">//&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">code &#123;</span><br><span class=\"line\">    color: <span class=\"comment\">#ff7600;</span></span><br><span class=\"line\">    background: <span class=\"comment\">#fbf7f8;</span></span><br><span class=\"line\">    margin: 2px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 大代码块的自定义样式</span><br><span class=\"line\">.highlight, pre &#123;</span><br><span class=\"line\">    margin: 5px 0;</span><br><span class=\"line\">    padding: 5px;</span><br><span class=\"line\">    border-radius: 3px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.highlight, code, pre &#123;</span><br><span class=\"line\">    border: 1px solid <span class=\"comment\">#d6d6d6;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"添加页脚本站运行时长\"><a href=\"#添加页脚本站运行时长\" class=\"headerlink\" title=\"添加页脚本站运行时长\"></a>添加页脚本站运行时长</h1><p>进入主题配置文件，把footer.swig的注释去掉：<br>然后再站点目录&#x2F;source&#x2F;_data&#x2F;中新建footer.swig<br>编辑footer.swig，写入以下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;sitetime&quot;</span>&gt;&lt;/span&gt;</span><br><span class=\"line\">&lt;script language=javascript&gt;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">siteTime</span></span>()&#123;</span><br><span class=\"line\">        window.setTimeout(<span class=\"string\">&quot;siteTime()&quot;</span>, 1000);</span><br><span class=\"line\">        var seconds = 1000;</span><br><span class=\"line\">        var minutes = seconds * 60;</span><br><span class=\"line\">        var hours = minutes * 60;</span><br><span class=\"line\">        var days = hours * 24;</span><br><span class=\"line\">        var years = days * 365;</span><br><span class=\"line\">        var today = new Date();</span><br><span class=\"line\">        var todayYear = today.getFullYear();</span><br><span class=\"line\">        var todayMonth = today.getMonth()+1;</span><br><span class=\"line\">        var todayDate = today.getDate();</span><br><span class=\"line\">        var todayHour = today.getHours();</span><br><span class=\"line\">        var todayMinute = today.getMinutes();</span><br><span class=\"line\">        var todaySecond = today.getSeconds();</span><br><span class=\"line\">        /* Date.UTC() -- 返回<span class=\"built_in\">date</span>对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)</span><br><span class=\"line\">        year - 作为<span class=\"built_in\">date</span>对象的年份，为4位年份值</span><br><span class=\"line\">        month - 0-11之间的整数，做为<span class=\"built_in\">date</span>对象的月份</span><br><span class=\"line\">        day - 1-31之间的整数，做为<span class=\"built_in\">date</span>对象的天数</span><br><span class=\"line\">        hours - 0(午夜24点)-23之间的整数，做为<span class=\"built_in\">date</span>对象的小时数</span><br><span class=\"line\">        minutes - 0-59之间的整数，做为<span class=\"built_in\">date</span>对象的分钟数</span><br><span class=\"line\">        seconds - 0-59之间的整数，做为<span class=\"built_in\">date</span>对象的秒数</span><br><span class=\"line\">        microseconds - 0-999之间的整数，做为<span class=\"built_in\">date</span>对象的毫秒数 */</span><br><span class=\"line\">        var t1 = Date.UTC(2020,05,14,18,07,00); //北京时间2020-05-14 18:07</span><br><span class=\"line\">        var t2 = Date.UTC(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond);</span><br><span class=\"line\">        var diff = t2-t1;</span><br><span class=\"line\">        var diffYears = Math.floor(diff/years);</span><br><span class=\"line\">        var diffDays = Math.floor((diff/days)-diffYears*365);</span><br><span class=\"line\">        var diffHours = Math.floor((diff-(diffYears*365+diffDays)*days)/hours);</span><br><span class=\"line\">        var diffMinutes = Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours)/minutes);</span><br><span class=\"line\">        var diffSeconds = Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours-diffMinutes*minutes)/seconds);</span><br><span class=\"line\">        document.getElementById(<span class=\"string\">&quot;sitetime&quot;</span>).innerHTML=<span class=\"string\">&quot;本站已苟且生存了 &quot;</span>+/*diffYears+<span class=\"string\">&quot; 年 &quot;</span>+*/diffDays+<span class=\"string\">&quot; 天 &quot;</span>+diffHours+<span class=\"string\">&quot; 小时 &quot;</span>+diffMinutes+<span class=\"string\">&quot; 分钟 &quot;</span>+diffSeconds+<span class=\"string\">&quot; 秒&quot;</span>;</span><br><span class=\"line\">    &#125;/*因为建站时间还没有一年，就将之注释掉了。需要的可以取消*/</span><br><span class=\"line\">    siteTime();</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"站点访问数量统计\"><a href=\"#站点访问数量统计\" class=\"headerlink\" title=\"站点访问数量统计\"></a>站点访问数量统计</h1><p>next7.x版本已经集成了busuanzi对站点访问量统计，只需要在配置文件中定位<code>busuanzi</code>将相关功能开启应该即可生效，但是遇到了个小问题，在Chrome中并未正常工作，但是Safari和Firefox都没问题。最终咨询了大神得知chrome高版本默认的refer策略变了<br>网上查找了相关的文章，可以通过修改Referrer-Policy默认值从no-referrer-when-downgrade改为strict-origin-when-cross-origin进行解决<br><a href=\"https://www.rongsoft.com/article/2020/12/09154351878/\">https://www.rongsoft.com/article/2020/12/09154351878/</a><br><a href=\"https://www.jianshu.com/p/26512475501a?ivk_sa=1024320u\">https://www.jianshu.com/p/26512475501a?ivk_sa=1024320u</a></p>\n<h1 id=\"文章加密\"><a href=\"#文章加密\" class=\"headerlink\" title=\"文章加密\"></a>文章加密</h1><blockquote>\n<p>emm..在没有购买github私有仓库的情况下，是个伪加密，<br>可以直接从git上查找下载到公开的源代码</p>\n</blockquote>\n<p>安装插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure>\n<p>站点配置文件添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Security</span></span><br><span class=\"line\">encrypt:</span><br><span class=\"line\">    <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>文章头部添加password、abstract、message。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: hello world</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 22022-5-30 21:24:00</span><br><span class=\"line\">password: <span class=\"built_in\">test</span></span><br><span class=\"line\">abstract: Welcome to my blog, enter password to <span class=\"built_in\">read</span>.</span><br><span class=\"line\">message: Welcome to my blog, enter password to <span class=\"built_in\">read</span>.</span><br><span class=\"line\">wrong_pass_message: Oh, this is an invalid password. Check and try again, please.</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>本博客加密文章等级公示</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">加密等级</th>\n<th align=\"center\">加密权限</th>\n<th align=\"center\">加密内容类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">0</td>\n<td align=\"center\">绝对不对外公开</td>\n<td align=\"center\">&#96;***</td>\n</tr>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">不对陌生人公开，熟人阅读后，会修改密码，不涉及商业</td>\n<td align=\"center\">&#96;***</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">不对非利益方公开</td>\n<td align=\"center\">涉及商业</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">仅对私人或者好友开放</td>\n<td align=\"center\">原作者或者其他可能类似侵权的原因</td>\n</tr>\n<tr>\n<td align=\"center\">4</td>\n<td align=\"center\">可选择性公开</td>\n<td align=\"center\">个人总结、个人不方便公开的生活经历等</td>\n</tr>\n<tr>\n<td align=\"center\">5</td>\n<td align=\"center\">未来会自动公开</td>\n<td align=\"center\">主要是对于一些原创文章的保护</td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://benpaodewoniu.github.io/2020/04/26/hexo26/\">1</a></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://blog.csdn.net/crazy_scott/article/details/80996427\">2</a></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><a href=\"https://blog.csdn.net/qq_42951560/article/details/122552109?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-122552109-blog-80996427.pc_relevant_antiscanv3&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-122552109-blog-80996427.pc_relevant_antiscanv3&utm_relevant_index=2\">3</a></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p><a href=\"https://www.heson10.com/posts/46324.html\">https://www.heson10.com/posts/46324.html</a><br><a href=\"https://www.heson10.com/posts/52911.html\">https://www.heson10.com/posts/52911.html</a><br><a href=\"https://tding.top/archives/2bd6d82.html\">https://tding.top/archives/2bd6d82.html</a><br><a href=\"https://zhuanlan.zhihu.com/p/157883940\">https://zhuanlan.zhihu.com/p/157883940</a></p>\n","categories":["Github","Hexo","Blog"],"tags":["博客搭建","学习笔记","博客优化"]},{"title":"Hexo + nexT主题 之 博客优化","url":"/2022/05/18/optimization_blog/","content":"<p><img src=\"/images/optimization_blog/myblog002.jpg\" alt=\"图片002\"><br>在完成了基础搭建工作后，虽然已经可以开始写文章了，但是觉得页面有些过于素净了，另外还存在一些bug，于是便有了以下的一系列折腾…</p>\n<span id=\"more\"></span>\n<p>网上修改方案千千万，本文将只针对我做过的优化项，及我所踩过的坑进行列举<br>以下内容并非每一项都需要跟着做，只挑选个人认为有用或有意思的部分即可~</p>\n<h1 id=\"绑定个人域名\"><a href=\"#绑定个人域名\" class=\"headerlink\" title=\"绑定个人域名\"></a>绑定个人域名</h1><p>emm..关于个人域名的话，不绑定个人域名也完全没有问题，不会影响后续的任何使用<br>但是 引用博主<a href=\"http://wu.run/\">吴润 · RunDouble</a>的描述</p>\n<blockquote>\n<p>域名是网站的入口，也是网站的第一印象，比如饿了么的官网的域名是：<a href=\"https://www.ele.me/\">https://www.ele.me/</a> ，很是巧妙。常见的有com,cn,net,org等后缀，也有小众的xyz,me,io等后缀，根据你自己的喜好，选择不同的后缀，比较常见的选择是com后缀。很多小众奇特的后缀在大陆是没办法备案的，网站也就无法上线。然而使用GitHub托管我们的网站，完全不需要备案，因为托管我们的网站内容的服务器在美国，而且在国内备案流程也比较繁杂，时间需要一周左右。</p>\n</blockquote>\n<p>正如此博主最终选择的域名，亦是如此巧妙 <a href=\"http://wu.run/\">http://wu.run/</a></p>\n<p>所以我也决定进行效仿，启用一个自己的<code>个性化域名</code>。</p>\n<p>申请域名的地方有很多，国内比较主流的域名代理厂商有阿里云和腾讯云，<br>我选择的是从阿里云上购买域名并绑定：<a href=\"https://www.aliyun.com/\">阿里云-为了无法计算的价值</a> 申请入口：<a href=\"https://wanwang.aliyun.com/domain/\">域名注册</a><br>购买域名这也是我们整个搭建过程中惟一一个需要花钱的地方。如果你已经有了空闲域名就无需购买，直接使用即可。</p>\n<p>我在购买的时候只单纯购买了域名，不建议一次性购买太长时间例如5年10年虽然也不贵，但是毕竟第一次，7-10块钱买个一年的试试水，后续不喜欢了还可以随时更换。然后我是未增购任何增值服务，因为网站是托管在github上的所以也不需要备案等相关增值服务。后续如果自己有其他的需要可再自行增购。</p>\n<p>购买好域名后，登录到<a href=\"https://account.aliyun.com/login/login.htm\">阿里云</a>，进入<a href=\"https://dc.console.aliyun.com/\">管理控制台</a>找到域名列表，找到你购买的域名，进行实名认证，认证完毕后点击进入你购买的域名，点击域名解析<br><img src=\"/images/optimization_blog/myblog11.png\" alt=\"图片11\"><br>点击添加记录，此时可以看到有一些选项需要我们填写，<br><img src=\"/images/optimization_blog/myblog12.png\" alt=\"图片12\"><br>我这里一共添加了三条解析记录，可参考上图。<br>其中<code>解析路线</code>不用点进去选择，保持默认即可，<code>TTL</code>也保持默认，<br>需要修改的是 <code>记录类型</code>、<code>主机记录</code>、<code>记录值</code> 这三项<br>第一个主机记录的值我是通过ping自己的xxxx.github.io域名得出来的<br>第二个主机记录的值填写的是GitHub的地址是192.30.252.153<br>第三个记录类型是CNAME，CNAME的记录值是：<code>你的实际用户名.github.io</code></p>\n<blockquote>\n<p>在通过ping获取个人域名的ip时，意外发现cmd的位置在桌面时ping命令用不了(之前都正常的，就离谱)最终定位到是系统变量值中未添加c:\\windows\\system32</p>\n</blockquote>\n<p>以上都添加好后登录回GitHub，进入之前创建的仓库，点击<code>Settings</code>，设置<code>Custom domain</code>，输入购买的域名，点<code>save</code>保存<br><img src=\"/images/optimization_blog/myblog13.png\" alt=\"图片13\"><br>接着进入<strong>Hexo博客站点目录</strong>中的&#x2F;source目录下，创建一个记事本文件，将你购买的域名输入进去。<br><img src=\"/images/optimization_blog/myblog14.png\" alt=\"图片14\"><br>保存，文件命名为<code>CNAME</code> ，注意保存成<code>所有文件</code>而不是<code>txt文件</code>。<br><img src=\"/images/optimization_blog/myblog15.png\" alt=\"图片15\"><br>最后回到博客的<code>Hexo站点目录</code>内，点击右键打开<code>Git bash here</code>命令行，依次输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>完成后打开浏览器在地址栏输入个性化域名就直接跳转到你自己搭建的网站上了。</p>\n<p><strong>实现效果</strong><br>可以查看我的博客链接:<br><a href=\"https://mysterious-x.github.io/\">https://mysterious-x.github.io/</a><br><a href=\"http://mysterious-x.space/\">http://mysterious-x.space/</a><br>最终指向的都是space域名</p>\n<h1 id=\"区分配置文件位置\"><a href=\"#区分配置文件位置\" class=\"headerlink\" title=\"区分配置文件位置\"></a>区分配置文件位置</h1><p>从此刻开始要明确注意区分配置文件位置<br>Hexo博客站点目录内的<code>_config.yml</code> 被称为<strong>站点配置文件</strong><br>Hexo博客站点目录&#x2F;themes&#x2F;主题目录&#x2F; 内的<code>_config.yml</code> 被称为<strong>主题配置文件</strong><br>例如我的next的主题配置文件位置：<strong>Blog&#x2F;themes&#x2F;next&#x2F;_config.yml</strong></p>\n<p><strong>这两个位置之后会经常用到，注意区分~！</strong></p>\n<h1 id=\"修改网站相关信息\"><a href=\"#修改网站相关信息\" class=\"headerlink\" title=\"修改网站相关信息\"></a>修改网站相关信息</h1><p>在博客的左侧页面可以显示一些基础信息</p>\n<p><strong>实现方法</strong><br>通过修改站点配置文件<code>_config.yml</code>，进行相应的更改</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">title: Mysterious-X的博客  #博客名</span><br><span class=\"line\">subtitle: 积跬步以至千里！  #副标题</span><br><span class=\"line\">description: myblog   #网页描述,给搜索引擎看的</span><br><span class=\"line\">author: Mr.X    #作者,在博客底部可以看到</span><br><span class=\"line\">language: zh-CN  #语言,不填则默认英文</span><br><span class=\"line\">timezone: Asia/Shanghai  #时区</span><br></pre></td></tr></table></figure>\n<p>此处需要注意<code>language</code>和<code>timezone</code>都是有输入规范的，</p>\n<blockquote>\n<p>博主此处踩坑，后续将网站主题换为next后，中文页面失效了，<br>由于主题被从默认状态替换为了主题状态，所以调用的主题配置文件不一样了，主题会去调用自带的language目录内文件，根据不同的主题，文件名可能是<code>zh-CN</code>或是<code>zh-Hans</code>可自行查看<br>例如我的<code>next</code>主题语言目录<strong>Blog&#x2F;themes&#x2F;next&#x2F;language</strong>中的就是<code>zh-Hans</code><br>后续又将站点配置文件中language: <code>zh-CN</code>改为了<code>zh-Hans</code>后恢复正常。</p>\n</blockquote>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog16.png\" alt=\"图片16\"></p>\n<h1 id=\"更换Hexo主题\"><a href=\"#更换Hexo主题\" class=\"headerlink\" title=\"更换Hexo主题\"></a>更换Hexo主题</h1><blockquote>\n<p>后续补充：<br>由于博主也是第一次尝试搭建，所以用的是多数搭建教程中推荐的默认地址，Next 是5.1.4版本，会存在少量bug，但也都已成功处理了，处理办法在下面的正文中也有写到，不多，3~4处吧。也比较好处理。<br>博客优化了一多半之后，在某篇文章中了解到，博主用的这个next5.1.4 的主题源代码版本较为落后，已经停止更新了，还有其他版本例如6、7、8，<br>如果嫌麻烦的，也可以选择其他的next版本看看，配置都是大同小异的，可能部分需要略微做一些小的修改<br>建议此步直接跳转参考下一篇文章:<a href=\"http://mysterious-x.space/2022/05/26/optimization-blog-2/\">升级next7</a>部分，直接安装7.x的主题一步到位，7.x中大部分功能均已内置好，可以省去很多优化的时间，7.x文章中只针对7.x与5.x的变化项做了说明，7.x文章中没有找到的功能可以再返回本文继续参考修改方式。</p>\n</blockquote>\n<blockquote>\n<p>NEXT主题历年的Github存储源<br>2014- 2017年<br><a href=\"https://github.com/iissnan/hexo-theme-next\">https://github.com/iissnan/hexo-theme-next</a><br>2018-2019<br><a href=\"https://github.com/theme-next/hexo-theme-next\">https://github.com/theme-next/hexo-theme-next</a><br>2020年<br><a href=\"https://github.com/next-theme/hexo-theme-next\">https://github.com/next-theme/hexo-theme-next</a></p>\n</blockquote>\n<p>博主是主题是NexT，其Github网址为：<a href=\"https://github.com/iissnan/hexo-theme-next\">iissnan&#x2F;hexo-theme-next</a></p>\n<p><strong>实现方法</strong><br>首先将NexT的主题源文件下载到本地，<br>在<code>Hexo站点目录内</code>使用Git克隆指令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n<p>修改站点配置文件:<code>_config.yml</code>找到<code>theme</code>属性，将其由默认主题<code>landscape</code>改为<code>next</code>。<br>然后执行部署指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>最后通过本地浏览器访问<code>localhost:4000</code>进行预览，预览出现问题的 可参考下一段落<code>安装next主题后页面乱码</code></p>\n<p>在本地访问确认没问题以后，再部署到github上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>提交后便可以在互联网的博客上看到修改主题后的样式了。<code>gexo d</code> 提交后会有1-3分钟的延迟，看到站点没有第一时间更换过来不要着急！~<br>虽然上篇文章讲过，但是博主还是要再次强调，<br>之后的所有修改，无论配置文件或新建文章后都需要重新生成一下和部署到github上，有些时候新的功能或效果不生效，可尝试<code>hexo clean</code>清除缓存后，重新用<code>hexo g</code> 生成，然后再本地预览或推送到git上。<br><code>hexo d</code>和<code>hexo s</code>，两者的区别在于，前者是将博客部署到远程的Github上，而后者是运行在本地，通过localhost:4000在浏览器中访问。后者是为了调试配置方便而使用，但是最终本地博客还是需要hexo deploy指令将其部署至Github上<br><strong>请牢记 hexo g + hexo d 和 hexo g + hexo s 这个两个组合~</strong><br>        生成 + 部署      生成 + 预览</p>\n<p><strong>实现效果</strong><br>可以查看我的<a href=\"http://mysterious-x.space/\">博客链接</a></p>\n<h1 id=\"安装next主题后页面乱码\"><a href=\"#安装next主题后页面乱码\" class=\"headerlink\" title=\"安装next主题后页面乱码\"></a>安装next主题后页面乱码</h1><p>安装完next主题后，本地预览是一堆代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">“ &#123;% extends ‘_layout.swig‘ %&#125; &#123;% import ‘_macro/post.swig‘ as post_templa</span><br></pre></td></tr></table></figure>\n<p>查询到原因是hexo在5.0之后把部分功能&#x2F;依赖给删除了需要自己手动安装</p>\n<p><strong>解决方案</strong><br>安装依赖文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm i hexo-renderer-swig</span><br></pre></td></tr></table></figure>\n<p>参考文献：<a href=\"https://blog.csdn.net/qq_44774831/article/details/119278514\">https://blog.csdn.net/qq_44774831/article/details/119278514</a><br>成功解决</p>\n<h1 id=\"设置主题模式\"><a href=\"#设置主题模式\" class=\"headerlink\" title=\"设置主题模式\"></a>设置主题模式</h1><p>在Hexo主题中，有四种不同的模式，通过切换模式，让NexT主题显示不一样的样式。<br>修改主题配置文件: <code>_config.yml</code>，在其中找到scheme属性，可看到默认有4种主题模式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Schemes</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Muse</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Mist</span></span><br><span class=\"line\">scheme: Pisces</span><br><span class=\"line\"><span class=\"comment\">#scheme: Gemini</span></span><br></pre></td></tr></table></figure>\n<p>NexT主题默认使用Muse模式，笔者采用的是Pisces模式，读者可逐一尝试后，根据自己的喜好选择其中一种模式，取消掉前面的#号注释即可。</p>\n<h1 id=\"设置预览摘要\"><a href=\"#设置预览摘要\" class=\"headerlink\" title=\"设置预览摘要\"></a>设置预览摘要</h1><p>首页默认状态是显示所有文章的列表，和每一篇文章都显示所有内容，这样感觉看起来不舒服，这时候可以启用预览摘要模式</p>\n<p><strong>实现方法</strong><br>修改主题配置文件: _config.yml 找到<code>auto_excerpt</code>属性，将<code>enable</code>设置为<code>true</code> ，将<code>length</code>设置为想要预览到的字数</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">auto_excerpt:</span><br><span class=\"line\"><span class=\"built_in\">enable</span>: <span class=\"literal\">true</span>  <span class=\"comment\">#将原有的false改为true</span></span><br><span class=\"line\">length: 150   <span class=\"comment\">#设置预览的字数</span></span><br></pre></td></tr></table></figure>\n<p>也可在文章中任意位置添加<code>&lt;!-- more --&gt;</code><br>可自定义 [Read More] 按钮之前要显示的内容！</p>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog17.png\" alt=\"图片17\"></p>\n<h1 id=\"添加个人头像\"><a href=\"#添加个人头像\" class=\"headerlink\" title=\"添加个人头像\"></a>添加个人头像</h1><p><strong>实现方法</strong></p>\n<p>修改主题配置文件: _config.yml 找到<code>avatar</code>字段,进行修改:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Sidebar Avatar</span></span><br><span class=\"line\"><span class=\"comment\"># in theme directory(source/images): /images/avatar.gif</span></span><br><span class=\"line\"><span class=\"comment\"># in site  directory(source/uploads): /uploads/avatar.gif</span></span><br><span class=\"line\">avatar: /images/head_icon.jpg</span><br></pre></td></tr></table></figure>\n<p>先将avatar字段前的#删除，然后粘贴上头像的目录位置或者链接。<br>博主是将头像图片保存在了主题目录下的source&#x2F;images文件夹，也可以存放在站点目录下的source&#x2F;uploads文件夹。也可以将自己的头像图片，保存在图床的某个地方，然后将对应的url地址复制过来，添加在avatar字段后即可。</p>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog18.png\" alt=\"图片18\"></p>\n<h1 id=\"设置网站图标\"><a href=\"#设置网站图标\" class=\"headerlink\" title=\"设置网站图标\"></a>设置网站图标</h1><p><strong>实现方法</strong><br>修改主题配置文件: _config.yml ，找到以下字段，进行相应的修改：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Put your favicon.ico into `hexo-site/source/` directory.</span><br><span class=\"line\">favicon: /web_icon.jpg</span><br></pre></td></tr></table></figure>\n<p>博主也是将网站图标的图片保存在了主题目录下的source&#x2F;images文件夹内。</p>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog19.png\" alt=\"图片19\"></p>\n<h1 id=\"增加导航栏菜单选项\"><a href=\"#增加导航栏菜单选项\" class=\"headerlink\" title=\"增加导航栏菜单选项\"></a>增加导航栏菜单选项</h1><p>默认情况下，导航栏有首页、归档、关于三个选项，除此博主还添加了分类、标签和关于。</p>\n<p><strong>实现方法</strong><br>修改主题配置文件: _config.yml，找到<code>menu</code>属性，将<code>categories</code>、 <code>tags</code>、<code>about</code>项前的 # 号注释去掉</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: / || home</span><br><span class=\"line\">  about: /about/ || user</span><br><span class=\"line\">  tags: /tags/ || tags</span><br><span class=\"line\">  categories: /categories/ || th</span><br><span class=\"line\">  archives: /archives/ || archive</span><br><span class=\"line\">  <span class=\"comment\">#schedule: /schedule/ || calendar</span></span><br><span class=\"line\">  <span class=\"comment\">#sitemap: /sitemap.xml || sitemap</span></span><br><span class=\"line\">  <span class=\"comment\">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure>\n<p>然后执行如下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page <span class=\"string\">&quot;categories&quot;</span>   <span class=\"comment\">#添加分类页面</span></span><br><span class=\"line\">hexo new page <span class=\"string\">&quot;tags&quot;</span>         <span class=\"comment\">#添加标签页面</span></span><br><span class=\"line\">hexo new page <span class=\"string\">&quot;about&quot;</span>        <span class=\"comment\">#添加关于页面</span></span><br></pre></td></tr></table></figure>\n<p>执行完上述指令后，在Hexo站点目录&#x2F;source&#x2F;文件夹下创建三个文件夹，命名分别为：categories、tags、about文件夹(一般会自动创建，没有的手动添加一下),在这些文件夹中分别会创建一个以index命名的Markdown文件，对这三个Markdown文件内容进行修改，使之分别为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">  title: 分类</span><br><span class=\"line\">  <span class=\"built_in\">date</span>: 2017-03-12 22:06:24</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: <span class=\"string\">&quot;categories&quot;</span></span><br><span class=\"line\">  ---</span><br><span class=\"line\"></span><br><span class=\"line\">  ---</span><br><span class=\"line\">  title: 标签</span><br><span class=\"line\">  <span class=\"built_in\">date</span>: 2017-03-12 17:27:16</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: <span class=\"string\">&quot;tags&quot;</span></span><br><span class=\"line\">  ---</span><br><span class=\"line\"></span><br><span class=\"line\">  ---</span><br><span class=\"line\">  title: 关于</span><br><span class=\"line\">  <span class=\"built_in\">date</span>: 2017-03-12 22:07:26</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: <span class=\"string\">&quot;about&quot;</span></span><br><span class=\"line\">  ---</span><br></pre></td></tr></table></figure>\n<p>完成文件的修改，然后重新部署Hexo即可完成菜单选项的添加。</p>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog20.png\" alt=\"图片20\"></p>\n<h1 id=\"给文章添加标签及分类\"><a href=\"#给文章添加标签及分类\" class=\"headerlink\" title=\"给文章添加标签及分类\"></a>给文章添加标签及分类</h1><p><strong>实现方法</strong><br>将需要置顶的文章打开，在文章的<code>Front-matter</code>中加上<code>categories:``tags:</code>即可。比如下面这样：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 记录：从零开始 搭建属于自己的blog</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2022-5-16 00:51:37</span><br><span class=\"line\">categories: </span><br><span class=\"line\">     - [<span class=\"string\">&quot;Github&quot;</span>]</span><br><span class=\"line\">     - [<span class=\"string\">&quot;Hexo&quot;</span>]</span><br><span class=\"line\">     - [<span class=\"string\">&quot;Blog&quot;</span>]</span><br><span class=\"line\">tags:  </span><br><span class=\"line\">     - 博客搭建</span><br><span class=\"line\">     - 学习笔记</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>其中categories项可通过添加或取消<code>[ ]</code>进行层级分级 例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">categories:</span><br><span class=\"line\">- 个人博客   <span class=\"comment\">#第一层级</span></span><br><span class=\"line\">- Hexo博客   <span class=\"comment\">#第二层级</span></span><br><span class=\"line\">tags:</span><br><span class=\"line\">- Hexo</span><br><span class=\"line\">- 博客</span><br></pre></td></tr></table></figure>\n<p>或</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">categories:</span><br><span class=\"line\">- [随想]   #同级</span><br><span class=\"line\">- [日记]   #同级</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"将文章置顶\"><a href=\"#将文章置顶\" class=\"headerlink\" title=\"将文章置顶\"></a>将文章置顶</h1><p><strong>实现方法</strong><br>在hexo站点目录打开Git bash执行下列命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-generator-index --save</span><br><span class=\"line\">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>\n<p>然后在需要置顶的文章的<code>Front-matter</code>中加上<code>top: true</code>即可。比如下面这样：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 记录：从零开始 搭建属于自己的blog</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2022-5-16 00:51:37</span><br><span class=\"line\">categories: </span><br><span class=\"line\">     - [<span class=\"string\">&quot;Github&quot;</span>]</span><br><span class=\"line\">     - [<span class=\"string\">&quot;Hexo&quot;</span>]</span><br><span class=\"line\">     - [<span class=\"string\">&quot;Blog&quot;</span>]</span><br><span class=\"line\">tags:  </span><br><span class=\"line\">     - 博客搭建</span><br><span class=\"line\">     - 学习笔记</span><br><span class=\"line\">top: <span class=\"literal\">true</span></span><br><span class=\"line\">comments: <span class=\"literal\">false</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>到目前为止，置顶功能已经可以实现了，但置顶的文章显示在最上面之后，并没有明确的置顶标志<br>打开：主题目录&#x2F;layout&#x2F;_macro 中的<code>post.swig</code>文件，定位到<code>&lt;div class=&quot;post-meta&quot;&gt;</code>标签下，插入如下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% <span class=\"keyword\">if</span> post.top %&#125;</span><br><span class=\"line\">  &lt;i class=<span class=\"string\">&quot;fa fa-thumb-tack&quot;</span>&gt;&lt;/i&gt;</span><br><span class=\"line\">  &lt;font color=7D26CD&gt;置顶&lt;/font&gt;</span><br><span class=\"line\">  &lt;span class=<span class=\"string\">&quot;post-meta-divider&quot;</span>&gt;|&lt;/span&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>一定注意添加位置不要插入在其他的<code>if  endif</code> 字段中间，注意格式<br>添加位置可参考此图：<br><img src=\"/images/optimization_blog/myblog21.png\" alt=\"图片21\"></p>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog22.png\" alt=\"图片22\"></p>\n<h1 id=\"修复-导航栏选项跳转异常\"><a href=\"#修复-导航栏选项跳转异常\" class=\"headerlink\" title=\"修复-导航栏选项跳转异常\"></a>修复-导航栏选项跳转异常</h1><p>点击导航栏中的标签、分类、关于 ，遇到Cannot GET&#x2F;xxx错误时<br><strong>解决办法</strong><br>由于此next版本配置文件中默认 &#x2F;与||之间是有空格的，把空格删除即可。<br>修改主题配置文件<code>_config.yml</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: /|| home</span><br><span class=\"line\">  categories: /categories/|| th</span><br><span class=\"line\">  archives: /archives/|| archive</span><br><span class=\"line\">  about: /about/|| user</span><br><span class=\"line\">  <span class=\"comment\">#tags: /tags/ || tags</span></span><br><span class=\"line\">  <span class=\"comment\">#schedule: /schedule/ || calendar</span></span><br><span class=\"line\">  <span class=\"comment\">#sitemap: /sitemap.xml || sitemap</span></span><br><span class=\"line\">  <span class=\"comment\">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"添加导航选项搜索功能\"><a href=\"#添加导航选项搜索功能\" class=\"headerlink\" title=\"添加导航选项搜索功能\"></a>添加导航选项搜索功能</h1><p><strong>实现方法</strong><br>Git bash执行以下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<p>然后打开站点配置文件<code>_config.yml</code>，在末尾添加以下代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Search Config</span></span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: search.json</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  <span class=\"built_in\">limit</span>: 1000</span><br></pre></td></tr></table></figure>\n<p>打开主题配置文件<code>_config.yml</code>，搜索<code>local_search</code>，修改以下代码,把enable的<code>false</code>改为<code>true</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Local Search</span></span><br><span class=\"line\"><span class=\"comment\"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class=\"line\">local_search:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># If auto, trigger search by changing input.</span></span><br><span class=\"line\">  <span class=\"comment\"># If manual, trigger search by pressing enter key or search button.</span></span><br></pre></td></tr></table></figure>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog23.png\" alt=\"图片23\"></p>\n<h1 id=\"菜单标签页添加彩色标签\"><a href=\"#菜单标签页添加彩色标签\" class=\"headerlink\" title=\"菜单标签页添加彩色标签\"></a>菜单标签页添加彩色标签</h1><p>此功能虽然实现了，但此版本next主题的Unicode代码显示有问题是方框 □ ，我最终是将content行注释掉了，感兴趣的可参考一下几篇文章<br><strong>实现方法</strong><br>content: “\\f02b”;<br><a href=\"https://blog.csdn.net/qq_39974578/article/details/114172260\">https://blog.csdn.net/qq_39974578/article/details/114172260</a><br>content: “?”;<br><a href=\"https://blog.csdn.net/as480133937/article/details/100138838/?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-1--blog-104806723.pc_relevant_antiscanv2&amp;spm=1001.2101.3001.4242.2&amp;utm_relevant_index=4\">https://blog.csdn.net/as480133937/article/details/100138838/?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-1--blog-104806723.pc_relevant_antiscanv2&amp;spm=1001.2101.3001.4242.2&amp;utm_relevant_index=4</a><br><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog24.png\" alt=\"图片24\"></p>\n<blockquote>\n<p>后续：<br>之后升级完next 7.x版本后，再次尝试，Unicode图标可以正常显示了,应该是5.x的bug或不兼容。</p>\n</blockquote>\n<p><img src=\"/images/optimization_blog/butu1.png\" alt=\"补图1\"></p>\n<h1 id=\"设置侧边栏显示效果\"><a href=\"#设置侧边栏显示效果\" class=\"headerlink\" title=\"设置侧边栏显示效果\"></a>设置侧边栏显示效果</h1><p>在next主题配置文件中，display属性有四种显示模式</p>\n<p><strong>实现方法</strong><br>打开主题配置文件<code>_config.yml</code>找到<code>Sidebar Display</code>字段，display属性有四种显示模式分别为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#display: post    #默认显示方式</span></span><br><span class=\"line\"><span class=\"comment\">#display: always  #一直显示</span></span><br><span class=\"line\">display: hide     <span class=\"comment\">#初始隐藏</span></span><br><span class=\"line\"><span class=\"comment\">#display: remove  #移除侧边栏</span></span><br></pre></td></tr></table></figure>\n<p>博主设置的是hide模式，可根据个人喜好进行设置，将想要设置的模式前的 <code>#</code> 号注释，删除即可。</p>\n<h1 id=\"设置站点概览中的名字及简介\"><a href=\"#设置站点概览中的名字及简介\" class=\"headerlink\" title=\"设置站点概览中的名字及简介\"></a>设置站点概览中的名字及简介</h1><p>站点概览的下方，也就是头像下面的位置，此处的名字和简介博主找了好久修改方法，最后发现侧边栏作者名调用的是<code>theme.author</code>也就是主题配置文件， 不是在站点配置文件…<br><strong>实现方法</strong><br>#需要在主题目录配置里单独添加 <code>author</code>、<code>description</code> 选项，可添加到主题配置文件的末尾，<br>注意格式！ : 后要加空格再写正文</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">author: Mr. X   <span class=\"comment\">#可以写你自己的博主名</span></span><br><span class=\"line\">description: 一个不会写代码的码农  <span class=\"comment\">#写一句话的描述</span></span><br></pre></td></tr></table></figure>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog25.png\" alt=\"图片25\"></p>\n<h1 id=\"修复-边栏头像下面日志链接错误\"><a href=\"#修复-边栏头像下面日志链接错误\" class=\"headerlink\" title=\"修复-边栏头像下面日志链接错误\"></a>修复-边栏头像下面日志链接错误</h1><p>记录下出现的问题<br>在侧边栏下侧位置，日志(上面带有数字的那个位置)，点击日志后出现<code>Cannot GET /archives/%7C%7C%20list/</code>问题，无法正常跳转</p>\n<p>综合了网上的解决办法：<br>1、主题配置文件内，将archives：&#x2F;archives&#x2F; || archive 改成archives：&#x2F;archives&#x2F;<br>删掉后面的||archive，的确能够解决问题，但是就没有图标了   <strong>不推荐</strong></p>\n<p>2、也是我后来采用的方法。    <strong>推荐</strong><br>在next主题目录&#x2F;layout&#x2F;_macro&#x2F; 找到sidebar.swig文件，定位到theme.menu的行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;a href=<span class=\"string\">&quot;&#123;&#123; url_for(theme.menu.archives).split(&#x27;||&#x27;)[0] | trim &#125;&#125;&quot;</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>发现原因是url_for函数将||转码了，<br>将以上代码替换为以下即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;a href=&quot;&#123;&#123; url_for(config.archive_dir) | trim &#125;&#125;&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"开启文章字数统计\"><a href=\"#开启文章字数统计\" class=\"headerlink\" title=\"开启文章字数统计\"></a>开启文章字数统计</h1><p>显示每篇文章字数</p>\n<p><strong>实现方法</strong><br>首先安装插件，执行以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>\n<p>然后修改主题配置文件<code>_config.yml</code> ，定位到<code>post_wordcount</code>，将wordcount项的参数由<code>false</code>改为<code>true</code>即可。<br><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog26.png\" alt=\"图片26\"></p>\n<h1 id=\"底栏站点文章总字数\"><a href=\"#底栏站点文章总字数\" class=\"headerlink\" title=\"底栏站点文章总字数\"></a>底栏站点文章总字数</h1><p><strong>实现方法</strong><br>打开next主题目录&#x2F;layout&#x2F;_partials&#x2F; 下找到<code>footer.swig</code>文件，在最后添加如下内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div class=“theme-info”&gt;</span><br><span class=\"line\">&lt;div class=“powered-by”&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;span class=“post-count”&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog27.png\" alt=\"图片27\"></p>\n<h1 id=\"站点访问量统计\"><a href=\"#站点访问量统计\" class=\"headerlink\" title=\"站点访问量统计\"></a>站点访问量统计</h1><p><strong>实现方法</strong><br>在 next 主题目录&#x2F;layout&#x2F;_third-party&#x2F;analytics&#x2F; 下找到 <code>busuanzi-counter.swig</code> 文件<br>定位如下内容并进行替换</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script async src=<span class=\"string\">&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">把上面的这个换成下面的这个</span><br><span class=\"line\">&lt;script async src=<span class=\"string\">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>然后打开next主题目录&#x2F;layout&#x2F;_partials&#x2F; 找到<code>footer.swig</code>文件，在合适的位置添加以下代码，博主是添加在了末尾</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div class=<span class=\"string\">&quot;powered-by&quot;</span>&gt;</span><br><span class=\"line\">&lt;i class=<span class=\"string\">&quot;fa fa-user-md&quot;</span>&gt;&lt;/i&gt;&lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span><br><span class=\"line\">    本站总访问量&lt;span <span class=\"built_in\">id</span>=<span class=\"string\">&quot;busuanzi_value_site_pv&quot;</span>&gt;&lt;/span&gt;次</span><br><span class=\"line\">&lt;/span&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>最终结果计数不显示，但是相关的字样和格式已经可以显示出来了，有待继续优化。</p>\n<p>还未尝试的方法<br><a href=\"https://blog.csdn.net/weixin_41599858/article/details/104806723\">https://blog.csdn.net/weixin_41599858/article/details/104806723</a></p>\n<h1 id=\"设置文章内链接为蓝色\"><a href=\"#设置文章内链接为蓝色\" class=\"headerlink\" title=\"设置文章内链接为蓝色\"></a>设置文章内链接为蓝色</h1><p>修改原因<br>链接的默认颜色是白色的，和普通字体颜色相同，不容易区分</p>\n<p><strong>实现方法</strong><br>在next主题目录&#x2F;source&#x2F;css&#x2F;_common&#x2F;components&#x2F;post&#x2F; 中找到<code>post.styl</code>文件，在文件中添加以下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">.post-body p a&#123;</span><br><span class=\"line\">    color: <span class=\"comment\">#0593d3;</span></span><br><span class=\"line\">    border-bottom: none;</span><br><span class=\"line\">    &amp;:hover &#123;</span><br><span class=\"line\">      color: <span class=\"comment\">#0477ab;</span></span><br><span class=\"line\">      text-decoration: underline;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>建议将代码添加到原文件内容的底部</p>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog28.png\" alt=\"图片28\"></p>\n<h1 id=\"添加友情链接功能\"><a href=\"#添加友情链接功能\" class=\"headerlink\" title=\"添加友情链接功能\"></a>添加友情链接功能</h1><p><strong>实现方法</strong><br>在主题配置文件 中找到links属性，修改links_title属性的值为“友情链接”（也可以是其他文案），取消注释links:，然后添加上好友的博客名称和博客地址，其格式如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Blog rolls</span><br><span class=\"line\">links_title: 友情链接  #修改名称</span><br><span class=\"line\">#links_layout: block</span><br><span class=\"line\">#links_layout: inline</span><br><span class=\"line\">links:   #该行取消注释</span><br><span class=\"line\">  知乎: http://name.zhihu</span><br><span class=\"line\">  CSDN: http://name.csdn</span><br></pre></td></tr></table></figure>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog29.png\" alt=\"图片29\"></p>\n<h1 id=\"添加动态背景\"><a href=\"#添加动态背景\" class=\"headerlink\" title=\"添加动态背景\"></a>添加动态背景</h1><p><strong>实现方法</strong></p>\n<p>在主题配置文件<code>_config.yml</code>中，定位到如下部分：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Canvas-nest</span><br><span class=\"line\">canvas_nest: true</span><br><span class=\"line\"></span><br><span class=\"line\"># three_waves</span><br><span class=\"line\">three_waves: false</span><br><span class=\"line\"></span><br><span class=\"line\"># canvas_lines</span><br><span class=\"line\">canvas_lines: false</span><br><span class=\"line\"></span><br><span class=\"line\"># canvas_sphere</span><br><span class=\"line\">canvas_sphere: false</span><br><span class=\"line\"></span><br><span class=\"line\"># Only fit scheme Pisces</span><br><span class=\"line\"># Canvas-ribbon</span><br><span class=\"line\">canvas_ribbon: false</span><br></pre></td></tr></table></figure>\n<p>这是已经集成好的几个动态效果，笔者采用的是canvas_nest，读者可依次体验(将false改为true)，选择最喜欢的动态背景。<br>不想逐一尝试的也可直接参考此篇文章中图片：<a href=\"https://afuya.blog.csdn.net/article/details/107424935?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-107424935-blog-104418517.pc_relevant_paycolumn_v3&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-107424935-blog-104418517.pc_relevant_paycolumn_v3&utm_relevant_index=1\">next主题添加背景动画</a></p>\n<h1 id=\"底部栏小心心\"><a href=\"#底部栏小心心\" class=\"headerlink\" title=\"底部栏小心心\"></a>底部栏小心心</h1><p><strong>实现方法</strong><br>打开主题配置文件，搜索footer，修改icon参数为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Icon between year and copyright info.</span><br><span class=\"line\">icon: heart</span><br></pre></td></tr></table></figure>\n<p>更多ico图标参见：<a href=\"https://fontawesome.com/v4/icons/\">The Icons</a></p>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog30.png\" alt=\"图片30\"></p>\n<h1 id=\"修改文章底部的-号标签\"><a href=\"#修改文章底部的-号标签\" class=\"headerlink\" title=\"修改文章底部的#号标签\"></a>修改文章底部的#号标签</h1><p><strong>实现方法</strong><br>在next主题目录&#x2F;layout&#x2F;_macro&#x2F;找到<code>post.swig</code>文件，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将其中的 <code>#</code> 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog31.png\" alt=\"图片31\"></p>\n<h1 id=\"鼠标轨迹特效\"><a href=\"#鼠标轨迹特效\" class=\"headerlink\" title=\"鼠标轨迹特效\"></a>鼠标轨迹特效</h1><p><strong>实现方法</strong><br>在next主题目录&#x2F;source&#x2F;js&#x2F;cursor目录中新建<code>fairyDustCursor.js</code>文件，并添加以下代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">fairyDustCursor</span></span>() &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  var possibleColors = [<span class=\"string\">&quot;#D61C59&quot;</span>, <span class=\"string\">&quot;#E7D84B&quot;</span>, <span class=\"string\">&quot;#1B8798&quot;</span>]</span><br><span class=\"line\">  var width = window.innerWidth;</span><br><span class=\"line\">  var height = window.innerHeight;</span><br><span class=\"line\">  var cursor = &#123;x: width/2, y: width/2&#125;;</span><br><span class=\"line\">  var particles = [];</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">init</span></span>() &#123;</span><br><span class=\"line\">    bindEvents();</span><br><span class=\"line\">    loop();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  // Bind events that are needed</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">bindEvents</span></span>() &#123;</span><br><span class=\"line\">    document.addEventListener(<span class=\"string\">&#x27;mousemove&#x27;</span>, onMouseMove);</span><br><span class=\"line\">    document.addEventListener(<span class=\"string\">&#x27;touchmove&#x27;</span>, onTouchMove);</span><br><span class=\"line\">    document.addEventListener(<span class=\"string\">&#x27;touchstart&#x27;</span>, onTouchMove);</span><br><span class=\"line\">    </span><br><span class=\"line\">    window.addEventListener(<span class=\"string\">&#x27;resize&#x27;</span>, onWindowResize);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">function</span> onWindowResize(e) &#123;</span><br><span class=\"line\">    width = window.innerWidth;</span><br><span class=\"line\">    height = window.innerHeight;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">function</span> onTouchMove(e) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( e.touches.length &gt; 0 ) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>( var i = 0; i &lt; e.touches.length; i++ ) &#123;</span><br><span class=\"line\">        addParticle( e.touches[i].clientX, e.touches[i].clientY, possibleColors[Math.floor(Math.random()*possibleColors.length)]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">function</span> onMouseMove(e) &#123;    </span><br><span class=\"line\">    cursor.x = e.clientX;</span><br><span class=\"line\">    cursor.y = e.clientY;</span><br><span class=\"line\">    </span><br><span class=\"line\">    addParticle( cursor.x, cursor.y, possibleColors[Math.floor(Math.random()*possibleColors.length)]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">function</span> addParticle(x, y, color) &#123;</span><br><span class=\"line\">    var particle = new Particle();</span><br><span class=\"line\">    particle.init(x, y, color);</span><br><span class=\"line\">    particles.push(particle);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">updateParticles</span></span>() &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>( var i = 0; i &lt; particles.length; i++ ) &#123;</span><br><span class=\"line\">      particles[i].update();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>( var i = particles.length -1; i &gt;= 0; i-- ) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>( particles[i].lifeSpan &lt; 0 ) &#123;</span><br><span class=\"line\">        particles[i].die();</span><br><span class=\"line\">        particles.splice(i, 1);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">loop</span></span>() &#123;</span><br><span class=\"line\">    requestAnimationFrame(loop);</span><br><span class=\"line\">    updateParticles();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">Particle</span></span>() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    this.character = <span class=\"string\">&quot;*&quot;</span>;</span><br><span class=\"line\">    this.lifeSpan = 120; //ms</span><br><span class=\"line\">    this.initialStyles =&#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;position&quot;</span>: <span class=\"string\">&quot;fixed&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;top&quot;</span>: <span class=\"string\">&quot;0&quot;</span>, //必须加</span><br><span class=\"line\">      <span class=\"string\">&quot;display&quot;</span>: <span class=\"string\">&quot;block&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;pointerEvents&quot;</span>: <span class=\"string\">&quot;none&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;z-index&quot;</span>: <span class=\"string\">&quot;10000000&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;fontSize&quot;</span>: <span class=\"string\">&quot;20px&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;will-change&quot;</span>: <span class=\"string\">&quot;transform&quot;</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    this.init = <span class=\"keyword\">function</span>(x, y, color) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      this.velocity = &#123;</span><br><span class=\"line\">        x:  (Math.random() &lt; 0.5 ? -1 : 1) * (Math.random() / 2),</span><br><span class=\"line\">        y: 1</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      </span><br><span class=\"line\">      this.position = &#123;x: x - 10, y: y - 20&#125;;</span><br><span class=\"line\">      this.initialStyles.color = color;</span><br><span class=\"line\">      console.log(color);</span><br><span class=\"line\"></span><br><span class=\"line\">      this.element = document.createElement(<span class=\"string\">&#x27;span&#x27;</span>);</span><br><span class=\"line\">      this.element.innerHTML = this.character;</span><br><span class=\"line\">      applyProperties(this.element, this.initialStyles);</span><br><span class=\"line\">      this.update();</span><br><span class=\"line\">      </span><br><span class=\"line\">      document.body.appendChild(this.element);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    this.update = <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">      this.position.x += this.velocity.x;</span><br><span class=\"line\">      this.position.y += this.velocity.y;</span><br><span class=\"line\">      this.lifeSpan--;</span><br><span class=\"line\">      </span><br><span class=\"line\">      this.element.style.transform = <span class=\"string\">&quot;translate3d(&quot;</span> + this.position.x + <span class=\"string\">&quot;px,&quot;</span> + this.position.y + <span class=\"string\">&quot;px,0) scale(&quot;</span> + (this.lifeSpan / 120) + <span class=\"string\">&quot;)&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    this.die = <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">      this.element.parentNode.removeChild(this.element);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">function</span> applyProperties( target, properties ) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>( var key <span class=\"keyword\">in</span> properties ) &#123;</span><br><span class=\"line\">      target.style[ key ] = properties[ key ];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  init();</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<p>然后在next主题目录&#x2F;layout&#x2F; 中找到<code>_layout.swig</code> 文件里尾部 body前添加引用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">  &#123;% include <span class=\"string\">&#x27;_custom/custom.swig&#x27;</span> %&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  &lt;!-- 鼠标移动特效 --&gt;</span><br><span class=\"line\">  &#123;% <span class=\"keyword\">if</span> theme.sakura.enable %&#125;</span><br><span class=\"line\">      &lt;script async src=<span class=\"string\">&quot;/js/cursor/fairyDustCursor.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">  &#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>最后在主题配置文件末尾添加以下三行代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 鼠标移动特效</span><br><span class=\"line\">sakura:</span><br><span class=\"line\">  enable: true</span><br></pre></td></tr></table></figure>\n\n<p><strong>实现效果</strong><br>去我的<a href=\"http://mysterious-x.space/\">博客页面</a>滑动鼠标看看~</p>\n<h1 id=\"鼠标点击特效\"><a href=\"#鼠标点击特效\" class=\"headerlink\" title=\"鼠标点击特效\"></a>鼠标点击特效</h1><p>下面是四个比较常用的鼠标点击特效脚本，我们可以把它们放置在 主题目录\\source\\js\\cursor\\ 目录下，首先创建相应的.js文件</p>\n<p>礼花特效代码 ：文件名 fireworks.js</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">class Circle &#123;</span><br><span class=\"line\">  constructor(&#123; origin, speed, color, angle, context &#125;) &#123;</span><br><span class=\"line\">    this.origin = origin</span><br><span class=\"line\">    this.position = &#123; ...this.origin &#125;</span><br><span class=\"line\">    this.color = color</span><br><span class=\"line\">    this.speed = speed</span><br><span class=\"line\">    this.angle = angle</span><br><span class=\"line\">    this.context = context</span><br><span class=\"line\">    this.renderCount = 0</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">draw</span></span>() &#123;</span><br><span class=\"line\">    this.context.fillStyle = this.color</span><br><span class=\"line\">    this.context.beginPath()</span><br><span class=\"line\">    this.context.arc(this.position.x, this.position.y, 2, 0, Math.PI * 2)</span><br><span class=\"line\">    this.context.fill()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">move</span></span>() &#123;</span><br><span class=\"line\">    this.position.x = (Math.sin(this.angle) * this.speed) + this.position.x</span><br><span class=\"line\">    this.position.y = (Math.cos(this.angle) * this.speed) + this.position.y + (this.renderCount * 0.3)</span><br><span class=\"line\">    this.renderCount++</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Boom &#123;</span><br><span class=\"line\">  constructor (&#123; origin, context, circleCount = 16, area &#125;) &#123;</span><br><span class=\"line\">    this.origin = origin</span><br><span class=\"line\">    this.context = context</span><br><span class=\"line\">    this.circleCount = circleCount</span><br><span class=\"line\">    this.area = area</span><br><span class=\"line\">    this.stop = <span class=\"literal\">false</span></span><br><span class=\"line\">    this.circles = []</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  randomArray(range) &#123;</span><br><span class=\"line\">    const length = range.length</span><br><span class=\"line\">    const randomIndex = Math.floor(length * Math.random())</span><br><span class=\"line\">    <span class=\"built_in\">return</span> range[randomIndex]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">randomColor</span></span>() &#123;</span><br><span class=\"line\">    const range = [<span class=\"string\">&#x27;8&#x27;</span>, <span class=\"string\">&#x27;9&#x27;</span>, <span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>, <span class=\"string\">&#x27;C&#x27;</span>, <span class=\"string\">&#x27;D&#x27;</span>, <span class=\"string\">&#x27;E&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>]</span><br><span class=\"line\">    <span class=\"built_in\">return</span> <span class=\"string\">&#x27;#&#x27;</span> + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  randomRange(start, end) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> (end - start) * Math.random() + start</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">init</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"built_in\">let</span> i = 0; i &lt; this.circleCount; i++) &#123;</span><br><span class=\"line\">      const circle = new Circle(&#123;</span><br><span class=\"line\">        context: this.context,</span><br><span class=\"line\">        origin: this.origin,</span><br><span class=\"line\">        color: this.randomColor(),</span><br><span class=\"line\">        angle: this.randomRange(Math.PI - 1, Math.PI + 1),</span><br><span class=\"line\">        speed: this.randomRange(1, 6)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      this.circles.push(circle)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">move</span></span>() &#123;</span><br><span class=\"line\">    this.circles.forEach((circle, index) =&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (circle.position.x &gt; this.area.width || circle.position.y &gt; this.area.height) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> this.circles.splice(index, 1)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      circle.move()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (this.circles.length == 0) &#123;</span><br><span class=\"line\">      this.stop = <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">draw</span></span>() &#123;</span><br><span class=\"line\">    this.circles.forEach(circle =&gt; circle.draw())</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class CursorSpecialEffects &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">constructor</span></span>() &#123;</span><br><span class=\"line\">    this.computerCanvas = document.createElement(<span class=\"string\">&#x27;canvas&#x27;</span>)</span><br><span class=\"line\">    this.renderCanvas = document.createElement(<span class=\"string\">&#x27;canvas&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    this.computerContext = this.computerCanvas.getContext(<span class=\"string\">&#x27;2d&#x27;</span>)</span><br><span class=\"line\">    this.renderContext = this.renderCanvas.getContext(<span class=\"string\">&#x27;2d&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    this.globalWidth = window.innerWidth</span><br><span class=\"line\">    this.globalHeight = window.innerHeight</span><br><span class=\"line\"></span><br><span class=\"line\">    this.booms = []</span><br><span class=\"line\">    this.running = <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleMouseDown(e) &#123;</span><br><span class=\"line\">    const boom = new Boom(&#123;</span><br><span class=\"line\">      origin: &#123; x: e.clientX, y: e.clientY &#125;,</span><br><span class=\"line\">      context: this.computerContext,</span><br><span class=\"line\">      area: &#123;</span><br><span class=\"line\">        width: this.globalWidth,</span><br><span class=\"line\">        height: this.globalHeight</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    boom.init()</span><br><span class=\"line\">    this.booms.push(boom)</span><br><span class=\"line\">    this.running || this.run()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">handlePageHide</span></span>() &#123;</span><br><span class=\"line\">    this.booms = []</span><br><span class=\"line\">    this.running = <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">init</span></span>() &#123;</span><br><span class=\"line\">    const style = this.renderCanvas.style</span><br><span class=\"line\">    style.position = <span class=\"string\">&#x27;fixed&#x27;</span></span><br><span class=\"line\">    style.top = style.left = 0</span><br><span class=\"line\">    style.zIndex = <span class=\"string\">&#x27;999999999999999999999999999999999999999999&#x27;</span></span><br><span class=\"line\">    style.pointerEvents = <span class=\"string\">&#x27;none&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    style.width = this.renderCanvas.width = this.computerCanvas.width = this.globalWidth</span><br><span class=\"line\">    style.height = this.renderCanvas.height = this.computerCanvas.height = this.globalHeight</span><br><span class=\"line\"></span><br><span class=\"line\">    document.body.append(this.renderCanvas)</span><br><span class=\"line\"></span><br><span class=\"line\">    window.addEventListener(<span class=\"string\">&#x27;mousedown&#x27;</span>, this.handleMouseDown.<span class=\"built_in\">bind</span>(this))</span><br><span class=\"line\">    window.addEventListener(<span class=\"string\">&#x27;pagehide&#x27;</span>, this.handlePageHide.<span class=\"built_in\">bind</span>(this))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">run</span></span>() &#123;</span><br><span class=\"line\">    this.running = <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (this.booms.length == 0) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">return</span> this.running = <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    requestAnimationFrame(this.run.bind(this))</span><br><span class=\"line\"></span><br><span class=\"line\">    this.computerContext.clearRect(0, 0, this.globalWidth, this.globalHeight)</span><br><span class=\"line\">    this.renderContext.clearRect(0, 0, this.globalWidth, this.globalHeight)</span><br><span class=\"line\"></span><br><span class=\"line\">    this.booms.forEach((boom, index) =&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (boom.stop) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> this.booms.splice(index, 1)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      boom.move()</span><br><span class=\"line\">      boom.draw()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    this.renderContext.drawImage(this.computerCanvas, 0, 0, this.globalWidth, this.globalHeight)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">const cursorSpecialEffects = new CursorSpecialEffects()</span><br><span class=\"line\">cursorSpecialEffects.init()</span><br></pre></td></tr></table></figure>\n<p>爆炸特效：文件名 explosion.js</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;use strict&quot;</span>;<span class=\"keyword\">function</span> updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;<span class=\"keyword\">function</span> setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;<span class=\"built_in\">return</span>&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;<span class=\"keyword\">function</span> createParticule(e,t)&#123;var a=&#123;&#125;;<span class=\"built_in\">return</span> a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=<span class=\"function\"><span class=\"title\">function</span></span>()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class=\"keyword\">function</span> createCircle(e,t)&#123;var a=&#123;&#125;;<span class=\"built_in\">return</span> a.x=e,a.y=t,a.color=<span class=\"string\">&quot;#F00&quot;</span>,a.radius=.1,a.alpha=.5,a.lineWidth=6,a.draw=<span class=\"function\"><span class=\"title\">function</span></span>()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;<span class=\"keyword\">function</span> renderParticule(e)&#123;<span class=\"keyword\">for</span>(var t=0;t&lt;e.animatables.length;t++)e.animatables[t].target.draw()&#125;<span class=\"keyword\">function</span> animateParticules(e,t)&#123;<span class=\"keyword\">for</span>(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)n.push(createParticule(e,t));anime.timeline().add(&#123;targets:n,x:<span class=\"keyword\">function</span>(e)&#123;<span class=\"built_in\">return</span> e.endPos.x&#125;,y:<span class=\"keyword\">function</span>(e)&#123;<span class=\"built_in\">return</span> e.endPos.y&#125;,radius:.1,duration:anime.random(1200,1800),easing:<span class=\"string\">&quot;easeOutExpo&quot;</span>,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:<span class=\"string\">&quot;linear&quot;</span>,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:<span class=\"string\">&quot;easeOutExpo&quot;</span>,update:renderParticule,offset:0&#125;)&#125;<span class=\"keyword\">function</span> debounce(e,t)&#123;var a;<span class=\"built_in\">return</span> <span class=\"function\"><span class=\"title\">function</span></span>()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(<span class=\"function\"><span class=\"title\">function</span></span>()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(<span class=\"string\">&quot;.fireworks&quot;</span>);<span class=\"keyword\">if</span>(canvasEl)&#123;var ctx=canvasEl.getContext(<span class=\"string\">&quot;2d&quot;</span>),numberOfParticules=30,pointerX=0,pointerY=0,tap=<span class=\"string\">&quot;mousedown&quot;</span>,colors=[<span class=\"string\">&quot;#FF1461&quot;</span>,<span class=\"string\">&quot;#18FF92&quot;</span>,<span class=\"string\">&quot;#5A87FF&quot;</span>,<span class=\"string\">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class=\"function\"><span class=\"title\">function</span></span>()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+<span class=\"string\">&quot;px&quot;</span>,canvasEl.style.height=window.innerHeight+<span class=\"string\">&quot;px&quot;</span>,canvasEl.getContext(<span class=\"string\">&quot;2d&quot;</span>).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:<span class=\"function\"><span class=\"title\">function</span></span>()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,<span class=\"keyword\">function</span>(e)&#123;<span class=\"string\">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class=\"string\">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class=\"string\">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class=\"string\">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(<span class=\"string\">&quot;resize&quot;</span>,setCanvasSize,!1)&#125;</span><br></pre></td></tr></table></figure>\n<p>浮出爱心特效：文件名 love.js</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">!<span class=\"keyword\">function</span>(e,t,a)&#123;<span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">n</span></span>()&#123;c(<span class=\"string\">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),o(),r()&#125;<span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">r</span></span>()&#123;<span class=\"keyword\">for</span>(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=<span class=\"string\">&quot;left:&quot;</span>+d[e].x+<span class=\"string\">&quot;px;top:&quot;</span>+d[e].y+<span class=\"string\">&quot;px;opacity:&quot;</span>+d[e].alpha+<span class=\"string\">&quot;;transform:scale(&quot;</span>+d[e].scale+<span class=\"string\">&quot;,&quot;</span>+d[e].scale+<span class=\"string\">&quot;) rotate(45deg);background:&quot;</span>+d[e].color+<span class=\"string\">&quot;;z-index:99999&quot;</span>);requestAnimationFrame(r)&#125;<span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">o</span></span>()&#123;var t=<span class=\"string\">&quot;function&quot;</span>==typeof e.onclick&amp;&amp;e.onclick;e.onclick=<span class=\"keyword\">function</span>(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class=\"keyword\">function</span> i(e)&#123;var a=t.createElement(<span class=\"string\">&quot;div&quot;</span>);a.className=<span class=\"string\">&quot;heart&quot;</span>,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;<span class=\"keyword\">function</span> c(e)&#123;var a=t.createElement(<span class=\"string\">&quot;style&quot;</span>);a.type=<span class=\"string\">&quot;text/css&quot;</span>;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class=\"string\">&quot;head&quot;</span>)[0].appendChild(a)&#125;<span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">s</span></span>()&#123;<span class=\"built_in\">return</span><span class=\"string\">&quot;rgb(&quot;</span>+~~(255*Math.random())+<span class=\"string\">&quot;,&quot;</span>+~~(255*Math.random())+<span class=\"string\">&quot;,&quot;</span>+~~(255*Math.random())+<span class=\"string\">&quot;)&quot;</span>&#125;var d=[];e.requestAnimationFrame=<span class=\"function\"><span class=\"title\">function</span></span>()&#123;<span class=\"built_in\">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class=\"keyword\">function</span>(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure>\n\n<p>浮出文字特效：文件名 text.js</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">var a_idx = 0;</span><br><span class=\"line\">jQuery(document).ready(<span class=\"keyword\">function</span>($) &#123;</span><br><span class=\"line\">  $(<span class=\"string\">&quot;body&quot;</span>).click(<span class=\"keyword\">function</span>(e) &#123;</span><br><span class=\"line\">    var a = new Array(<span class=\"string\">&quot;喜欢我&quot;</span>, <span class=\"string\">&quot;不喜欢我&quot;</span>);</span><br><span class=\"line\">    var <span class=\"variable\">$i</span> = $(<span class=\"string\">&quot;&lt;span/&gt;&quot;</span>).text(a[a_idx]);</span><br><span class=\"line\">    var x = e.pageX,</span><br><span class=\"line\">    y = e.pageY;</span><br><span class=\"line\">    <span class=\"variable\">$i</span>.css(&#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;z-index&quot;</span>: 99999,</span><br><span class=\"line\">      <span class=\"string\">&quot;top&quot;</span>: y - 28,</span><br><span class=\"line\">      <span class=\"string\">&quot;left&quot;</span>: x - a[a_idx].length * 8,</span><br><span class=\"line\">      <span class=\"string\">&quot;position&quot;</span>: <span class=\"string\">&quot;absolute&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;color&quot;</span>: <span class=\"string\">&quot;#ff7a45&quot;</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;body&quot;</span>).append(<span class=\"variable\">$i</span>);</span><br><span class=\"line\">    <span class=\"variable\">$i</span>.animate(&#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;top&quot;</span>: y - 180,</span><br><span class=\"line\">      <span class=\"string\">&quot;opacity&quot;</span>: 0</span><br><span class=\"line\">    &#125;, 1500, <span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">      <span class=\"variable\">$i</span>.remove();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    a_idx = (a_idx + 1) % a.length;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>其中浮出文字的特效是可以自定义文字的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">var a = new Array(<span class=\"string\">&quot;喜欢我&quot;</span>, <span class=\"string\">&quot;不喜欢我&quot;</span>);   <span class=\"comment\">#此处的文字、数量可以根据喜好进行更改</span></span><br></pre></td></tr></table></figure>\n<p>例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">var a = new Array(<span class=\"string\">&quot;和谐&quot;</span>, <span class=\"string\">&quot;民主&quot;</span>, <span class=\"string\">&quot;文明&quot;</span>, <span class=\"string\">&quot;富强&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>在hexo主题目录&#x2F;layout&#x2F;_custom&#x2F; 找到custom.swig文件，没有则创建，然后添加以下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"comment\"># 鼠标点击特效 #&#125;</span></span><br><span class=\"line\">&#123;% <span class=\"keyword\">if</span> theme.cursor_effect == <span class=\"string\">&quot;fireworks&quot;</span> %&#125;</span><br><span class=\"line\">  &lt;script async src=<span class=\"string\">&quot;/js/cursor/fireworks.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&#123;% elseif theme.cursor_effect == <span class=\"string\">&quot;explosion&quot;</span> %&#125;</span><br><span class=\"line\">  &lt;canvas class=<span class=\"string\">&quot;fireworks&quot;</span> style=<span class=\"string\">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;&lt;/canvas&gt;</span><br><span class=\"line\">  &lt;script src=<span class=\"string\">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">  &lt;script async src=<span class=\"string\">&quot;/js/cursor/explosion.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&#123;% elseif theme.cursor_effect == <span class=\"string\">&quot;love&quot;</span> %&#125;</span><br><span class=\"line\">  &lt;script async src=<span class=\"string\">&quot;/js/cursor/love.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&#123;% elseif theme.cursor_effect == <span class=\"string\">&quot;text&quot;</span> %&#125;</span><br><span class=\"line\">  &lt;script async src=<span class=\"string\">&quot;/js/cursor/text.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>在hexo主题目录&#x2F;layout&#x2F;_layout.swig 文件中 末尾处 body前引入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% include <span class=\"string\">&#x27;_custom/custom.swig&#x27;</span> %&#125;</span><br></pre></td></tr></table></figure>\n<p>最后在主题配置文件中添加如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 鼠标点击特效</span><br><span class=\"line\"># mouse click effect: fireworks | explosion | love | text</span><br><span class=\"line\">cursor_effect: fireworks</span><br></pre></td></tr></table></figure>\n<p>这样即可通过在配置文件更改<code>cursor_effect:</code>达成一键快速切换鼠标点击特效。</p>\n<p>此功能我在网上找了两篇教程设置略有不同，我用的第二篇成功了，如果不成功的也可对照参考另一篇：<br><a href=\"https://blog.csdn.net/qq_40590778/article/details/104662040\">https://blog.csdn.net/qq_40590778/article/details/104662040</a><br><a href=\"https://tding.top/archives/58cff12b.html\">https://tding.top/archives/58cff12b.html</a></p>\n<blockquote>\n<p>后续<br>在升级next7.x以后，第一篇文章用上了，配置文件位置有变化</p>\n</blockquote>\n<p><strong>实现效果</strong><br>去我的<a href=\"http://mysterious-x.space/\">博客页面</a>点点看~</p>\n<h1 id=\"自定义鼠标样式\"><a href=\"#自定义鼠标样式\" class=\"headerlink\" title=\"自定义鼠标样式\"></a>自定义鼠标样式</h1><p><strong>实现方法</strong><br>在next主题目录&#x2F;source&#x2F;css&#x2F;_custom&#x2F; 找到<code>custom.styl</code>文件,在里面添加如下代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">// 鼠标样式</span><br><span class=\"line\">  * &#123;</span><br><span class=\"line\">      cursor: url(<span class=\"string\">&quot;http://om8u46rmb.bkt.clouddn.com/sword2.ico&quot;</span>),auto!important</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  :active &#123;</span><br><span class=\"line\">      cursor: url(<span class=\"string\">&quot;http://om8u46rmb.bkt.clouddn.com/sword1.ico&quot;</span>),auto!important</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>其中 url 里面必须是 ico 图片，ico图片可以上传到网上，然后获取外链，复制到 url 里就行了</p>\n<h1 id=\"添加2D看板娘或宠物\"><a href=\"#添加2D看板娘或宠物\" class=\"headerlink\" title=\"添加2D看板娘或宠物\"></a>添加2D看板娘或宠物</h1><p><strong>实现方法</strong><br>安装helper-live2d插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>\n<p>挑选及下载模型<br>作者动画展示网站<a href=\"https://huaji8.top/post/live2d-plugin-2.0/\">https://huaji8.top/post/live2d-plugin-2.0/</a><br>模型名称：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">live2d-widget-model-chitose</span><br><span class=\"line\">live2d-widget-model-epsilon2_1</span><br><span class=\"line\">live2d-widget-model-gf</span><br><span class=\"line\">live2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)</span><br><span class=\"line\">live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)</span><br><span class=\"line\">live2d-widget-model-haruto</span><br><span class=\"line\">live2d-widget-model-hibiki</span><br><span class=\"line\">live2d-widget-model-hijiki</span><br><span class=\"line\">live2d-widget-model-izumi</span><br><span class=\"line\">live2d-widget-model-koharu</span><br><span class=\"line\">live2d-widget-model-miku</span><br><span class=\"line\">live2d-widget-model-ni-j</span><br><span class=\"line\">live2d-widget-model-nico</span><br><span class=\"line\">live2d-widget-model-nietzsche</span><br><span class=\"line\">live2d-widget-model-nipsilon</span><br><span class=\"line\">live2d-widget-model-nito</span><br><span class=\"line\">live2d-widget-model-shizuku</span><br><span class=\"line\">live2d-widget-model-tororo</span><br><span class=\"line\">live2d-widget-model-tsumiki</span><br><span class=\"line\">live2d-widget-model-unitychan</span><br><span class=\"line\">live2d-widget-model-wanko</span><br><span class=\"line\">live2d-widget-model-z16</span><br></pre></td></tr></table></figure>\n\n<p>选好对应的模型，使用 <code>npm install 模型的包名</code>来进行安装<br>比如我选择的的是<code>live2d-widget-model-koharu</code> 模型包<br>在git bash 输入以下代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install live2d-widget-model-koharu</span><br></pre></td></tr></table></figure>\n\n<p>执行安装后打开站点配置文件 _config.yml ，在最后添加以下代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">live2d:</span><br><span class=\"line\">  <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  scriptFrom: <span class=\"built_in\">local</span></span><br><span class=\"line\">  pluginRootPath: live2dw/</span><br><span class=\"line\">  pluginJsPath: lib/</span><br><span class=\"line\">  pluginModelPath: assets/</span><br><span class=\"line\">  tagMode: <span class=\"literal\">false</span></span><br><span class=\"line\">  debug: <span class=\"literal\">false</span></span><br><span class=\"line\">  model:</span><br><span class=\"line\">    use: live2d-widget-model-hijiki</span><br><span class=\"line\">  display:</span><br><span class=\"line\">    position: right</span><br><span class=\"line\">    width: 150</span><br><span class=\"line\">    height: 300</span><br><span class=\"line\">  mobile:</span><br><span class=\"line\">    show: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>插件部署与应用就完成了</p>\n<p><strong>实现效果</strong><br>欢迎点进<a href=\"http://mysterious-x.space/\">博客页面</a>在右下角~(目光会跟随鼠标哈)</p>\n<h1 id=\"代码块样式自定义\"><a href=\"#代码块样式自定义\" class=\"headerlink\" title=\"代码块样式自定义\"></a>代码块样式自定义</h1><p><strong>实现方法</strong><br>在next主题目录&#x2F;source&#x2F;css&#x2F;_custom&#x2F; 找到<code>custom.styl</code>文件,向里面加入如下代码(颜色可以自己定义)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">// Custom styles.</span><br><span class=\"line\">code &#123;</span><br><span class=\"line\">    color: <span class=\"comment\">#ff7600;</span></span><br><span class=\"line\">    background: <span class=\"comment\">#fbf7f8;</span></span><br><span class=\"line\">    margin: 2px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 大代码块的自定义样式</span><br><span class=\"line\">.highlight, pre &#123;</span><br><span class=\"line\">    margin: 5px 0;</span><br><span class=\"line\">    padding: 5px;</span><br><span class=\"line\">    border-radius: 3px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.highlight, code, pre &#123;</span><br><span class=\"line\">    border: 1px solid <span class=\"comment\">#d6d6d6;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog32.png\" alt=\"图片32\"></p>\n<h1 id=\"设置代码高亮主题\"><a href=\"#设置代码高亮主题\" class=\"headerlink\" title=\"设置代码高亮主题\"></a>设置代码高亮主题</h1><p>NexT 使用 Tomorrow Theme 作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 normal 主题，可选的值有 normal，night， night blue， night bright， night eighties</p>\n<p><strong>实现方法</strong><br>打开主题配置文件<code>_config.yml</code>定位到highlight_theme 字段，将其值设定成你所喜爱的高亮主题，例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Code Highlight theme</span><br><span class=\"line\"># Available value: normal | night | night eighties | night blue | night bright</span><br><span class=\"line\"># https://github.com/chriskempson/tomorrow-theme</span><br><span class=\"line\">highlight_theme: night</span><br></pre></td></tr></table></figure>\n\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog33.png\" alt=\"图片33\"></p>\n<h1 id=\"一键复制代码功能\"><a href=\"#一键复制代码功能\" class=\"headerlink\" title=\"一键复制代码功能\"></a>一键复制代码功能</h1><p><strong>实现方法</strong><br>在next主题目录&#x2F;layout&#x2F;_third-party&#x2F;下新建文件<code>copy-code.swig</code><br>粘贴以下代码进去</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% <span class=\"keyword\">if</span> theme.codeblock.copy_button.enable %&#125;</span><br><span class=\"line\">  &lt;style&gt;</span><br><span class=\"line\">    .copy-btn &#123;</span><br><span class=\"line\">      display: inline-block;</span><br><span class=\"line\">      padding: 6px 12px;</span><br><span class=\"line\">      font-size: 13px;</span><br><span class=\"line\">      font-weight: 700;</span><br><span class=\"line\">      line-height: 20px;</span><br><span class=\"line\">      color: <span class=\"comment\">#4D4D4C;</span></span><br><span class=\"line\">      white-space: nowrap;</span><br><span class=\"line\">      vertical-align: middle;</span><br><span class=\"line\">      cursor: pointer;</span><br><span class=\"line\">      background-color: <span class=\"comment\">#F7F7F7;</span></span><br><span class=\"line\">      background-image: linear-gradient(<span class=\"comment\">#F7F7F7, #F7F7F7);</span></span><br><span class=\"line\">      border: 1px solid <span class=\"comment\">#d5d5d5;</span></span><br><span class=\"line\">      border-radius: 3px;</span><br><span class=\"line\">      user-select: none;</span><br><span class=\"line\">      outline: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    .highlight-wrap .copy-btn &#123;</span><br><span class=\"line\">      transition: opacity .3s ease-in-out;</span><br><span class=\"line\">      opacity: 0;</span><br><span class=\"line\">      padding: 2px 6px;</span><br><span class=\"line\">      position: absolute;</span><br><span class=\"line\">      right: 4px;</span><br><span class=\"line\">      top: 8px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    .highlight-wrap:hover .copy-btn,</span><br><span class=\"line\">    .highlight-wrap .copy-btn:focus &#123;</span><br><span class=\"line\">      opacity: 1</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    .highlight-wrap &#123;</span><br><span class=\"line\">      position: relative;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;script&gt;</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;.highlight&#x27;</span>).each(<span class=\"keyword\">function</span> (i, e) &#123;</span><br><span class=\"line\">      var <span class=\"variable\">$wrap</span> = $(<span class=\"string\">&#x27;&lt;div&gt;&#x27;</span>).addClass(<span class=\"string\">&#x27;highlight-wrap&#x27;</span>)</span><br><span class=\"line\">      $(e).after(<span class=\"variable\">$wrap</span>)</span><br><span class=\"line\">      <span class=\"variable\">$wrap</span>.append($(<span class=\"string\">&#x27;&lt;button&gt;&#x27;</span>).addClass(<span class=\"string\">&#x27;copy-btn&#x27;</span>).append(<span class=\"string\">&#x27;&#123;&#123;__(&quot;post.copy_button&quot;)&#125;&#125;&#x27;</span>).on(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"keyword\">function</span> (e) &#123;</span><br><span class=\"line\">        var code = $(this).parent().find(<span class=\"string\">&#x27;.code&#x27;</span>).find(<span class=\"string\">&#x27;.line&#x27;</span>).map(<span class=\"keyword\">function</span> (i, e) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">return</span> $(e).text()</span><br><span class=\"line\">        &#125;).toArray().<span class=\"built_in\">join</span>(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">        var ta = document.createElement(<span class=\"string\">&#x27;textarea&#x27;</span>)</span><br><span class=\"line\">        document.body.appendChild(ta)</span><br><span class=\"line\">        ta.style.position = <span class=\"string\">&#x27;absolute&#x27;</span></span><br><span class=\"line\">        ta.style.top = <span class=\"string\">&#x27;0px&#x27;</span></span><br><span class=\"line\">        ta.style.left = <span class=\"string\">&#x27;0px&#x27;</span></span><br><span class=\"line\">        ta.value = code</span><br><span class=\"line\">        ta.select()</span><br><span class=\"line\">        ta.focus()</span><br><span class=\"line\">        var result = document.execCommand(<span class=\"string\">&#x27;copy&#x27;</span>)</span><br><span class=\"line\">        document.body.removeChild(ta)</span><br><span class=\"line\">        &#123;% <span class=\"keyword\">if</span> theme.codeblock.copy_button.show_result %&#125;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(result)$(this).text(<span class=\"string\">&#x27;&#123;&#123;__(&quot;post.copy_success&quot;)&#125;&#125;&#x27;</span>)</span><br><span class=\"line\">          <span class=\"keyword\">else</span> $(this).text(<span class=\"string\">&#x27;&#123;&#123;__(&quot;post.copy_failure&quot;)&#125;&#125;&#x27;</span>)</span><br><span class=\"line\">        &#123;% endif %&#125;</span><br><span class=\"line\">        $(this).blur()</span><br><span class=\"line\">      &#125;)).on(<span class=\"string\">&#x27;mouseleave&#x27;</span>, <span class=\"keyword\">function</span> (e) &#123;</span><br><span class=\"line\">        var <span class=\"variable\">$b</span> = $(this).find(<span class=\"string\">&#x27;.copy-btn&#x27;</span>)</span><br><span class=\"line\">        setTimeout(<span class=\"function\"><span class=\"title\">function</span></span> () &#123;</span><br><span class=\"line\">          <span class=\"variable\">$b</span>.text(<span class=\"string\">&#x27;&#123;&#123;__(&quot;post.copy_button&quot;)&#125;&#125;&#x27;</span>)</span><br><span class=\"line\">        &#125;, 300)</span><br><span class=\"line\">      &#125;).append(e)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &lt;/script&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>编辑next主题目录&#x2F;layout&#x2F;_layout.swig文件，在文件末尾body前的位置添加一行代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">  &#123;% include <span class=\"string\">&#x27;_third-party/scroll-cookie.swig&#x27;</span> %&#125;</span><br><span class=\"line\">  &#123;% include <span class=\"string\">&#x27;_third-party/exturl.swig&#x27;</span> %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#123;% include <span class=\"string\">&#x27;_third-party/copy-code.swig&#x27;</span> %&#125;  <span class=\"comment\">#要加入的代码</span></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>在next主题目录&#x2F;languages&#x2F;zh-Hans.yml文件的post板块中任意位置添加下列代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">copy_button: 复制</span><br><span class=\"line\">copy_success: 复制成功</span><br><span class=\"line\">copy_failure: 复制失败</span><br></pre></td></tr></table></figure>\n<p>我是添加在了这里，注意是post板块中，注意格式前面有两个空格，还有不要插入到其他的子列表里。<br>如图</p>\n<p>最后在主题配置文件中添加开关，编辑主题配置文件<code>_config.yml</code>，添加codeblock模块及添加copy_button的开关，next 5.1.4默认是没有codeblock模块的需要手动添加以下代码，添加在配置文件的末尾即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">codeblock:</span><br><span class=\"line\">  border_radius:</span><br><span class=\"line\">  copy_button:</span><br><span class=\"line\">    <span class=\"built_in\">enable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"comment\"># Show text copy result</span></span><br><span class=\"line\">    show_result: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog34.png\" alt=\"图片34\"></p>\n<h1 id=\"文章插入本地图片\"><a href=\"#文章插入本地图片\" class=\"headerlink\" title=\"文章插入本地图片\"></a>文章插入本地图片</h1><p>写文章时发现上传的博客文章里面的本地图片显示不出来<br>综合了网上的文章得出如下结果<br><strong>实现方法</strong><br>需要先安装上传本地图片的插件，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install https://github.com/EricGerry/hexo-asset-image-0.0.5.git --save</span><br></pre></td></tr></table></figure>\n<p>（注：在找到的资料中，有的显示需要修改一下插件文件，可以先安装后试试，如果不能引用图片，在参考：<a href=\"https://blog.csdn.net/xjm850552586/article/details/84101345?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task\">修改插件</a>内容进行修改）<br><strong>1、绝对路径本地引用</strong><br>在source里建立一个文件夹（如images），将图片统一放到source&#x2F;images文件夹中，通过markdown语法访问它们。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">![图片标题](images/image.png) //(假设图片名：image.png)</span><br></pre></td></tr></table></figure>\n<p><strong>2、相对路径本地引用</strong><br>图片可以放在文章所在的目录中，需要先在站点配置文件_config.yml中将post_asset_folder: flase修改为post_asset_folder: true</p>\n<p>将配置项post_asset_folder设为true后，执行命令$ hexo new article_name，在source&#x2F;_posts中会生成文章article_name.md和同名文件夹article_name。将图片资源放在article_name文件夹中，文章就可以使用相对路径引用图片资源了。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">![图片标题](image.png)</span><br></pre></td></tr></table></figure>\n<p><strong>3、标签插件语法引用</strong><br>图片在文章和首页中同时显示，可以使用标签插件语法。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;% asset_img image.png 说明 %&#125;</span><br></pre></td></tr></table></figure>\n<p>打开站点配置文件<code>_config.yml</code> 找到<code>post_asset_folder</code>字段，设置值为<code>true</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">post_asset_folder: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<p>博主在绝对路径images&#x2F;xxxx.png下引用成功了，但是相对路径失败了，感兴趣的可以参考这两篇文章<br><a href=\"https://www.freesion.com/article/2218345272/\">https://www.freesion.com/article/2218345272/</a><br><a href=\"https://blog.csdn.net/qq_42327444/article/details/104899648\">https://blog.csdn.net/qq_42327444/article/details/104899648</a></p>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog35.png\" alt=\"图片35\"></p>\n<h1 id=\"寻找图床\"><a href=\"#寻找图床\" class=\"headerlink\" title=\"寻找图床\"></a>寻找图床</h1><p>图床，当博文中有图片时，若是少量图片，可以直接把图片存放在source文件夹中，但图片会占据大量的存储的空间，加载的时候相对缓慢 ，这时考虑把博文里的图片上传到某一网站，然后获得外部链接，使用Markdown语法，<code>![图片信息](外部链接)</code>  完成图片的插入，这种网站就被成为图床。常见的简易的图床网站有：贴图库、外链图床 、阿里云图床、新浪微博和七牛云 ，使用方法可以参看其他文章。图床最重要的就是稳定速度快，所以在挑选图床的时候一定要仔细</p>\n<h1 id=\"在每一篇文章后加本文结束的标记\"><a href=\"#在每一篇文章后加本文结束的标记\" class=\"headerlink\" title=\"在每一篇文章后加本文结束的标记\"></a>在每一篇文章后加本文结束的标记</h1><p><strong>实现方法</strong><br>在next主题目录&#x2F;layout&#x2F;_macro 中新建 <code>passage-end-tag.swig</code> 文件,并添加以下内容：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">    &#123;% <span class=\"keyword\">if</span> not is_index %&#125;</span><br><span class=\"line\">        &lt;div style=<span class=\"string\">&quot;text-align:center;color: #ccc;font-size:14px; margin-top:10px&quot;</span>&gt;-------------本文结束---感谢您的阅读-------------&lt;/div&gt;</span><br><span class=\"line\">    &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>接着打开next主题目录&#x2F;layout&#x2F;_macro&#x2F;post.swig文件,找到<code>END POST BODY</code>字段，将下方代码插入到END POST BODY后<br>示意如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"comment\">#####################&#125;</span></span><br><span class=\"line\">&#123;<span class=\"comment\">### END POST BODY ###&#125;</span></span><br><span class=\"line\">&#123;<span class=\"comment\">#####################&#125;</span></span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">      &#123;% <span class=\"keyword\">if</span> not is_index %&#125;</span><br><span class=\"line\">        &#123;% include <span class=\"string\">&#x27;passage-end-tag.swig&#x27;</span> %&#125;</span><br><span class=\"line\">      &#123;% endif %&#125;</span><br><span class=\"line\">    &lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>最后打开主题配置文件<code>_config.yml</code>，在末尾添加以下三行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 文章末尾添加“本文结束”标记</span><br><span class=\"line\">passage_end_tag:</span><br><span class=\"line\">  enabled: true</span><br></pre></td></tr></table></figure>\n<p><strong>实现效果</strong><br><img src=\"/images/optimization_blog/myblog36.png\" alt=\"图片36\"></p>\n<h1 id=\"Hexo博客收录百度和谷歌-基于Next主题\"><a href=\"#Hexo博客收录百度和谷歌-基于Next主题\" class=\"headerlink\" title=\"Hexo博客收录百度和谷歌-基于Next主题\"></a>Hexo博客收录百度和谷歌-基于Next主题</h1><p>还未实验，近期不做，有需要的可参考下文<br><a href=\"https://www.jianshu.com/p/8c0707ce5da4\">https://www.jianshu.com/p/8c0707ce5da4</a></p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p><a href=\"http://theme-next.iissnan.com/theme-settings.html\">http://theme-next.iissnan.com/theme-settings.html</a><br><a href=\"https://qwerty200696.github.io/2017/09/09/blog-opti/\">https://qwerty200696.github.io/2017/09/09/blog-opti/</a><br><a href=\"https://blog.csdn.net/awt_fudonglai/category_10191857.html\">https://blog.csdn.net/awt_fudonglai/category_10191857.html</a><br><a href=\"https://zhuanlan.zhihu.com/p/33616481\">https://zhuanlan.zhihu.com/p/33616481</a><br><a href=\"https://zhuanlan.zhihu.com/p/106060640\">https://zhuanlan.zhihu.com/p/106060640</a><br><a href=\"https://blog.csdn.net/qq_33699981/article/details/72716951?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1-72716951-blog-107463289.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1-72716951-blog-107463289.pc_relevant_default&amp;utm_relevant_index=2\">https://blog.csdn.net/qq_33699981/article/details/72716951?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-72716951-blog-107463289.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-72716951-blog-107463289.pc_relevant_default&amp;utm_relevant_index=2</a><br><a href=\"https://blog.csdn.net/as480133937/article/details/100138838?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-3-100138838-blog-114172260.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-3-100138838-blog-114172260.pc_relevant_default&amp;utm_relevant_index=6https://blog.csdn.net/as480133937/article/details/100138838?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-3-100138838-blog-114172260.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-3-100138838-blog-114172260.pc_relevant_default&amp;utm_relevant_index=6\">https://blog.csdn.net/as480133937/article/details/100138838?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-3-100138838-blog-114172260.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-3-100138838-blog-114172260.pc_relevant_default&amp;utm_relevant_index=6https://blog.csdn.net/as480133937/article/details/100138838?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-3-100138838-blog-114172260.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-3-100138838-blog-114172260.pc_relevant_default&amp;utm_relevant_index=6</a><br><a href=\"https://www.freesion.com/article/2218345272/\">https://www.freesion.com/article/2218345272/</a></p>\n","categories":["Github","Hexo","Blog"],"tags":["博客搭建","学习笔记","博客优化"]},{"title":"Hello World","url":"/2022/05/14/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"}]