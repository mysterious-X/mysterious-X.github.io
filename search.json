[{"title":"记录：从零开始 搭建属于自己的blog","url":"/2022/05/16/create_blog/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>为什么要自己搭建博客?<br>你看技术大神们哪个没有自己的优秀博客<br>通过做笔记的方式对学习历程进行记录，对所学的知识形成⽂章也是对⾃⼰的交代<br>不懂技术的小伙伴也可以在自己的小天地写文，很爽又很有逼格是不是~</p>\n<p>用知乎、CSDN、博客园、简书等站点进行写作不行吗？<br>当然没问题啊，但是自行建站，一切都可以自己定制，毫无限制，你的地盘你做主<br>拥有属于自己的独立博客   自由，自在~<br>可以看看这篇文章：<a href=\"http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/\">刘未鹏 | Mind Hacks</a><br>更多请看 <a href=\"https://www.zhihu.com/question/19916345\">为什么要自建博客</a>？</p>\n<p>本站是通过Github托管+Hexo博客框架+Next主题搭建而来的<br>GitHub：一个静态站点托管服务+提供.github.io免费域名<br>Hexo：一个高效的博客框架<br>NexT：一个简约风格的网站主题</p>\n<p>Github+hexo搭建个人博客的相关的教程网上有很多，但每位技术大神都写的不太一样(还有受不同环境或版本的影响…)，所以我决定写下来记录一下我搭建的第一个博客的过程，包括我亲身踩过的一些坑orz…希望给和我一样的技术小白提供一些帮助。<br>最后，感谢互联网中提供帮助的各路大神。</p>\n<hr>\n<h1 id=\"搭建步骤概览\"><a href=\"#搭建步骤概览\" class=\"headerlink\" title=\"搭建步骤概览\"></a>搭建步骤概览</h1><ol>\n<li>第一部分 Github的安装及相关配置 <ul>\n<li>注册Github账号</li>\n<li>创建Repository #仓库</li>\n<li>安装Git</li>\n<li>将Git与GitHub账号绑定</li>\n</ul>\n</li>\n<li>第二部分 搭建Hexo博客 安装及相关配置<ul>\n<li>安装Node.js #依赖环境</li>\n<li>安装Hexo框架</li>\n<li>将博客部署到github.io #发布网站</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h1 id=\"Github的安装及相关配置\"><a href=\"#Github的安装及相关配置\" class=\"headerlink\" title=\"Github的安装及相关配置\"></a>Github的安装及相关配置</h1><h2 id=\"注册Github账号\"><a href=\"#注册Github账号\" class=\"headerlink\" title=\"注册Github账号\"></a>注册Github账号</h2><p>由于网站是托管在Github上的，所以首先需要创建Github的账户<br>访问<a href=\"/https://github.com/\">Github官网</a> 右上角<code>Sign up</code>开始创建</p>\n<h2 id=\"创建Repository-仓库\"><a href=\"#创建Repository-仓库\" class=\"headerlink\" title=\"创建Repository #仓库\"></a>创建Repository #仓库</h2><p>注册好Github账户后，继续创建用于托管网站的仓库，按目前的Github网页排版可点击<br><code>New</code>、<code>Start a project</code>、<code>New repository</code>这三个位置进行仓库的创建<br><img src=\"/images/create_blog/myblog1.png\" alt=\"图1\"><br>Repository 仓库名字的格式应该是 <code>username.github.io</code> 也就是你创建好博客后的域名<br>其中username保持与注册用户名一致<br>例如我的username是mysterious-X 仓库名则为<code>mysterious-X.github.io</code><br><img src=\"/images/create_blog/myblog2.png\" alt=\"图2\"><br>其余选项可以按需，博主是全部保持的默认，<br>最后下拉到底，点击<code>Creat repository</code>完成仓库创建</p>\n<h2 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h2><p>Git是什么？参照廖雪峰老师博客中的说法，Git是目前 主流的、开源的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。更多详细介绍可移步至此 <a href=\"https://www.liaoxuefeng.com/wiki/896043488029600/896202815778784\">Git的诞生</a><br>最简单的理解就是网站在本地搭建好后，需要使用Git同步到GitHub上进行托管及上线<br>很多博主在搭建时都推荐了<a href=\"https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496\">廖雪峰老师的Git教程</a> 其中包括了linux、Mac OS、Windows的安装教程。<br>本博客是通过windows系统搭建的，但无奈廖老师的windows部分的教程选择的是默认安装…<br>而我又对众多的选项非常好奇，本着求知欲，所以又多找了几份关于Windows系统的，带图带翻译和详细步骤讲解的安装教程，可以对比着看。<br><a href=\"https://blog.csdn.net/mukes/article/details/115693833\">Git 详细安装教程1</a><br><a href=\"https://blog.csdn.net/weixin_44486583/article/details/122704375\">Git 详细安装教程2</a><br>Git官方windows版下载传送门→<a href=\"https://git-scm.com/download/win\">Git Download for Windows</a> </p>\n<h2 id=\"将Git与GitHub帐号绑定\"><a href=\"#将Git与GitHub帐号绑定\" class=\"headerlink\" title=\"将Git与GitHub帐号绑定\"></a>将Git与GitHub帐号绑定</h2><p>Git安装完成后在桌面任意位置右键菜单点击<code>Git Bash here</code>或者在菜单里搜索<code>Git Bash</code>并打开<br>设置user.name和user.email配置信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global user.name GitHub用户名</span><br></pre></td></tr></table></figure>\n<p>#输入你实际的github注册用户名</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global user.email GitHub注册邮箱</span><br></pre></td></tr></table></figure>\n<p>#输入你实际的github注册邮箱</p>\n<p>生成SSH Key 密钥</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C GitHub注册邮箱</span><br></pre></td></tr></table></figure>\n<p>#输入你实际的github注册邮箱</p>\n<p>然后直接一键三连(三次回车)，默认不需要设置密码<br>最后看到这样的界面，就成功生成ssh key了<br><img src=\"/images/create_blog/myblog3.png\" alt=\"图3\"></p>\n<p>配置 SSH key 密钥<br>配置 SSH key 用来将本地git项目与github联系<br>找到生成 .ssh 密钥的文件夹(如上图中标记位置查看自己的，每个人的路径都不一样)，<br>将文件夹内名为<code>id_rsa.pub</code>的密钥内的全部内容复制，<br>#没找到的勾选一下文件扩展名 隐藏的项目<br>复制完后打开<a href=\"https://github.com/settings/keys\">GitHub_Settings_keys</a>页面，<br>#如链接失效，也可在github上点右上角头像下拉菜单 -&gt; 点击Settings -&gt; 左侧列表中点开SSH and GPG keys -&gt; 点击<code>New SSH key</code><br><img src=\"/images/create_blog/myblog4.png\" alt=\"图4\"><br><img src=\"/images/create_blog/myblog5.png\" alt=\"图5\"><br>Title：可以任意填写，我写的是myBlog<br>Key：将刚刚复制的<code>id_rsa.pub</code>密钥内容粘贴至此<br>点击<code>Add SSH key</code>完成<br>最后在Git Bash中检测GitHub公钥设置是否成功，<br>输入以下代码 不要改任何一个字 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh git@github.com</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/create_blog/myblog6.png\" alt=\"图6\"><br>如上则说明本机已成功连接到Github。<br>这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p>\n<h1 id=\"搭建Hexo博客-安装及相关配置\"><a href=\"#搭建Hexo博客-安装及相关配置\" class=\"headerlink\" title=\"搭建Hexo博客 安装及相关配置\"></a>搭建Hexo博客 安装及相关配置</h1><h2 id=\"安装Node-js-依赖环境\"><a href=\"#安装Node-js-依赖环境\" class=\"headerlink\" title=\"安装Node.js #依赖环境\"></a>安装Node.js #依赖环境</h2><p><code>Hexo</code>基于Node.js，会包含环境变量及npm的安装，下载<a href=\"https://link.zhihu.com/?target=https://nodejs.org/en/download/\">Node.js</a> 安装包并安装<br>安装后检测Node.js及npm是否安装成功，在命令行中输入 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/create_blog/myblog7.png\" alt=\"图7\"><br>如返回值如上，则Hexo的环境已全部搭建完毕。</p>\n<h2 id=\"安装Hexo框架\"><a href=\"#安装Hexo框架\" class=\"headerlink\" title=\"安装Hexo框架\"></a>安装Hexo框架</h2><p>环境准备好后，开始安装Hexo<br><code>Hexo</code>是个人博客网站的框架， 首先需要在自己的电脑里创建一个文件夹，例如<code>D:\\myblog\\mysterious-X.github.io\\</code><br>Hexo框架与以后你自己发布的网页都在这个文件夹中<br>此文件夹的名字博主是填写的自己的Repository仓库名</p>\n<p>#博主在之后访问搭建好的页面时，遇到了github.io页面404报错<br>重新搭建了环境并使 Github用户名、Repository仓库名、本地文件夹名 保持一致后解决的<br>所以如果是跟博主一样的新手的话，第一次搭建时可以保守起见，<br>将Github用户名、Repository仓库名、本地文件夹名  保持一致<br>相关资料可参考：<br><a href=\"https://blog.csdn.net/dajian790626/article/details/78595684\">https://blog.csdn.net/dajian790626/article/details/78595684</a><br><a href=\"http://www.jianshu.com/p/380290deb8f0\">http://www.jianshu.com/p/380290deb8f0</a></p>\n<p>创建好后，直接在该文件夹上右击<code>Git Bash Here</code><br>或进入文件夹内，空白地方右击鼠标点击<code>Git Bash Here</code><br><strong>提示</strong>：在进行博客搭建或之后进行优化修改工作时，每次使用命令都要在<code>此目录</code>下进行。<br>使用npm命令安装Hexo</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli </span><br></pre></td></tr></table></figure>\n<p>安装完成后，初始化博客</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br></pre></td></tr></table></figure>\n<p>现在已经搭建好本地的 Hexo 博客了，为了检测我们的网站雏形<br>分别按顺序输入以下三条命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new test_my_site</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作。<br>完成后，打开浏览器输入地址：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">localhost:4000</span><br></pre></td></tr></table></figure>\n<p>这样我们就可以看到已经搭建好本地的博客了</p>\n<p><em><strong>常用的Hexo 命令</strong></em><br>hexo init              #初始化博客<br>hexo n 文章标题 #新建文章          hexo new 的简写<br>hexo g                #生成                 hexo generate 的简写<br>hexo s                #启动服务预览   hexo server 的简写<br>hexo d                #部署                 hexo deploy 的简写<br>hexo clean         #清除缓存，若网页正常情况下可忽略这条命令<br>之后每次修改配置文件或新建文章后都需要重新生成一下和部署到github上</p>\n<h2 id=\"将博客部署到github-io-发布网站\"><a href=\"#将博客部署到github-io-发布网站\" class=\"headerlink\" title=\"将博客部署到github.io #发布网站\"></a>将博客部署到github.io #发布网站</h2><p>上步中已经完成了站点的本地预览，接下来要做的就是将网站进行发布，这样可以让更多的人阅读到<br>在hexo框架中最主要的配置文件<code>_config.yml</code>也被称之为站点配置文件，<br>之后的一些站点配置和优化都会用到此文件。<br><img src=\"/images/create_blog/myblog8.png\" alt=\"图8\"><br>编辑站点配置文件，可以使用<code>nodepad++</code>打开<br>翻到末尾，找到deploy开头的地方，进行如下修改：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">type: git</span><br><span class=\"line\">repo: 这里填入你之前在GitHub上创建仓库的SSH</span><br><span class=\"line\">branch: master</span><br></pre></td></tr></table></figure>\n<p>repo的地址：进入 Github 个人主页中，点右上角头像中的<code>Repositories</code>，点进之前新建的项目中，点击<code>code</code>，复制新建的独立博客项目的 <code>SSH</code> 码，复制粘贴至站点文件<code>repo:</code> 的后面<br><strong>一定要注意语法，要用英文符号的<code>：</code>，所有的<code> ：</code> 后面必须加一个<code>空格</code>，不然会报错。</strong><br><img src=\"/images/create_blog/myblog9.png\" alt=\"图9\"><br><img src=\"/images/create_blog/myblog10.png\" alt=\"图10\"><br>修改完后保存退出。</p>\n<p>最后安装Git部署插件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>此步是为了给hexo d·这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置<br>安装完成后依次输入以下命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo g </span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 <a href=\"http://xxxx.github.io/\">http://xxxx.github.io</a><br>比如我的xxxx就是我的GitHub用户名: <a href=\"https://mysterious-x.github.io/\">mysterious-x.github.io</a><br>如果你发现你的博客与博主一样已经上线了，可以在网络上被访问到了。<br>那么….<br>           <em><strong>恭喜你~！你的博客已经搭建好啦！</strong></em></p>\n<p>至此，我的首个博客基础搭建部分就算完毕了，后续只需要通过一些简单的Markdown语法就可以快速生成一篇博客了。</p>\n<p>附：<br><em><strong>初识Markdown语法</strong></em><br>Markdown也是现在各博客平台比较主流的编辑语法，入门只要3-5分钟。<br>教程也是网上一抓一大把，在此我推荐几篇我个人认为比较简洁明了的，非常之好上手。<br>传送门1~  -&gt;  <a href=\"https://www.jianshu.com/p/191d1e21f7ed\">简书-Markdown基本语法</a><br>传送门2~  -&gt;  <a href=\"https://www.runoob.com/markdown/md-tutorial.html\">菜鸟教程-Markdown 教程</a><br>传送门3~  -&gt;  <a href=\"https://blog.csdn.net/afei__/article/details/80717153\">CSDN-Markdown语法介绍</a></p>\n<p>后续会对博客进行更多个性化的功能定制~<br>继续打造独一无二且只属于你的个性化博客~<br>详参下篇！~</p>\n<p><strong>参考文献</strong><br><a href=\"https://zhuanlan.zhihu.com/p/32957389\">技术小白搭建个人博客 github+hexo</a><br><a href=\"https://zhuanlan.zhihu.com/p/26625249\">GitHub+Hexo 搭建个人网站详细教程</a><br><a href=\"https://www.liaoxuefeng.com/wiki/896043488029600\">史上最浅显易懂的Git教程！</a></p>\n","categories":["Github","Hexo","Blog"],"tags":["博客搭建","学习笔记"]},{"title":"Hello World","url":"/2022/05/14/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"test_22/05/11","url":"/2022/05/11/test-22-05-11/","content":"<p>11111111112222222<br>3333333333<br>444444444444444444</p>\n","categories":["categories-test_22/05/11","categories-test_1"],"tags":["tags-test1","tags-test2"]},{"title":"test_220512","url":"/2022/05/12/test-220512/","content":"<p>test_test<br>test_test test_test<br>test_test</p>\n<p>#test_test#<br>112333<br>##test##<br>112333\t\t   </p>\n","tags":["tags-test1","tags-test2"]},{"title":"test_my_blog","url":"/2022/05/11/test-my-blog/","content":""}]